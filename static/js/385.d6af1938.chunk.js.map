{"version":3,"file":"static/js/385.d6af1938.chunk.js","mappings":"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","sources":["component/Home/LatestFilledForms.jsx","component/Home/Home.jsx","component/commonComponents/Cards/HelperCards.jsx","store/services/form/form.js","store/actions/form.action.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport DataTableExtensions from \"react-data-table-component-extensions\";\r\nimport \"react-data-table-component-extensions/dist/index.css\";\r\nimport { BsPencilSquare } from \"react-icons/bs\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getLatestFilledForms } from \"../../store/actions/form.action\";\r\nimport SpinnerComponent from \"../commonComponents/Loader/Loader.jsx\";\r\n\r\n\r\nconst LatestFilledForms = () => {\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\tname: \"Patient ID\",\r\n\t\t\tselector: row => row.id,\r\n\t\t\tcellExport: row => row.id,\r\n\t\t\tcell: row => row.id || '',\r\n\t\t\twrap: true,\r\n\t\t\tcenter: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Name\",\r\n\t\t\tselector: row => row.name,\r\n\t\t\tcellExport: row => row.name,\r\n\t\t\tcell: row => row.name || '',\r\n\t\t\twrap: true,\r\n\t\t\tcenter: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"CNIC\",\r\n\t\t\tselector: row => row.demographic[0]?.demo_section_answer?.[0]?.answer_text,\r\n\t\t\tcellExport: row => row.demographic[0]?.demo_section_answer?.[0]?.answer_text,\r\n\t\t\tcell: row => row.demographic[0]?.demo_section_answer?.[0]?.answer_text || '',\r\n\t\t\twrap: true,\r\n\t\t\tcenter: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"DoB\",\r\n\t\t\tselector: row => row.demographic[0]?.dob,\r\n\t\t\tcellExport: row => row.demographic[0]?.dob,\r\n\t\t\tcell: row => row.demographic[0]?.dob?.split('T')[0] || '',\r\n\t\t\twrap: true,\r\n\t\t\tcenter: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Created By\",\r\n\t\t\tselector: row => row.created_by?.name,\r\n\t\t\tcellExport: row => row.created_by?.name,\r\n\t\t\tcell: row => row.created_by?.name || '',\r\n\t\t\twrap: true,\r\n\t\t\tcenter: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Created At\",\r\n\t\t\tselector: row => row.created_at,\r\n\t\t\tcellExport: row => row.created_at,\r\n\t\t\tcell: row => (row.created_at?.split('T')[0] || '') + ' ' + (' ', row.created_at?.split('T')[1]?.split('.')[0] || ''),\r\n\t\t\twrap: true,\r\n\t\t\tcenter: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Action\",\r\n\t\t\tsortable: false,\r\n\t\t\tcell: (row) => (\r\n\t\t\t\t<div className=\"btn-group\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => _editForm(row.id)}\r\n\t\t\t\t\t\tclassName=\"btn btn-primary btn-sm\"\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tname=\"options\"\r\n\t\t\t\t\t\tid=\"option1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BsPencilSquare />\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t{/* <button\r\n\t\t\t\t\t\tonClick={() => console.log(row.demographic[0].id)}\r\n\t\t\t\t\t\tclassName=\"btn btn-danger btn-sm\"\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tname=\"options\"\r\n\t\t\t\t\t\tid=\"option2\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BsTrashFill />\r\n\t\t\t\t\t</button> */}\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t];\r\n\r\n\tconst [isLoading, setisLoading] = useState(false);\r\n\tconst [data, setData] = useState([]);\r\n\tconst [page, setPage] = useState(1);\r\n\tconst [rowsPerPage, setRowsPerPage] = useState(10);\r\n\tconst [totalUsers, setTotalUsers] = useState(0);\r\n\r\n\tconst navigate = useNavigate();\r\n\tconst tableData = {\r\n\t\tcolumns,\r\n\t\tdata,\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t_getLatestFilledForms();\r\n\t}, [page, rowsPerPage]);\r\n\r\n\tconst _getLatestFilledForms = async () => {\r\n\t\tsetisLoading(true);\r\n\t\ttry {\r\n\t\t\tconst response = await getLatestFilledForms({\r\n\t\t\t\t_pageNo: page,\r\n\t\t\t\t_count: rowsPerPage\r\n\t\t\t});\r\n\t\t\tsetData(response.data?.patients || []);\r\n\t\t\tsetTotalUsers(response.data?.total || 0);\r\n\t\t\tsetisLoading(false);\r\n\t\t} catch (error) {\r\n\t\t\tsetisLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tfunction _editForm(id) {\r\n\t\tif (!id) return toast.error('No ID Found');\r\n\t\treturn navigate(\"/edit-form-demo-patient\", { state: { id } });\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3> Latest Filled Forms </h3>\r\n\t\t\t<div className=\"card-body border-top p-9\">\r\n\t\t\t\t<DataTableExtensions {...tableData}>\r\n\t\t\t\t\t<DataTable\r\n\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\tnoHeader\r\n\t\t\t\t\t\thighlightOnHover\r\n\t\t\t\t\t\tdefaultSortField=\"id\"\r\n\t\t\t\t\t\tdefaultSortAsc={true}\r\n\t\t\t\t\t\texportHeaders={true}\r\n\r\n\t\t\t\t\t\tprogressComponent={<SpinnerComponent text={` Loading Forms ...`} vh100={false} />}\r\n\t\t\t\t\t\tprogressPending={isLoading}\r\n\t\t\t\t\t\ttitle=\"Latest Filled Forms\"\r\n\t\t\t\t\t\tresponsive={true}\r\n\r\n\t\t\t\t\t\tpagination\r\n\t\t\t\t\t\tpaginationServer\r\n\t\t\t\t\t\tpaginationDefaultPage={page}\r\n\t\t\t\t\t\tpaginationPerPage={rowsPerPage}\r\n\t\t\t\t\t\tpaginationTotalRows={totalUsers}\r\n\r\n\t\t\t\t\t\tonChangePage={(page) => setPage(Number(page))}\r\n\t\t\t\t\t\tonChangeRowsPerPage={(row) => setRowsPerPage(Number(row))}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DataTableExtensions>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default LatestFilledForms;","import Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTitle } from '../../helpers/custom-hooks.js';\r\nimport { CenterTextCard, PageCard } from '../commonComponents/Cards/HelperCards.jsx';\r\nimport LatestFilledForms from './LatestFilledForms.jsx';\r\nimport { useUserProfile } from '../../context/UserContextProvider.js';\r\n\r\nfunction Home() {\r\n\tconst { getUserProfile_c } = useUserProfile();\r\n\tconst user = getUserProfile_c();\r\n\tuseTitle('Index');\r\n\r\n\treturn (\r\n\t\t<PageCard title=\"Home Page\" >\r\n\t\t\t<CenterTextCard>\r\n\t\t\t\t<Link to=\"/form\">\r\n\t\t\t\t\t<Button variant=\"primary\" >\r\n\t\t\t\t\t\tContinue to Form\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</CenterTextCard>\r\n\t\t\t<CenterTextCard styles={{ marginTop: '32px' }}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{/**\r\n\t\t\t\t\t * render only if the user is an admin\r\n\t\t\t\t\t */}\r\n\t\t\t\t\t{user?.role === 'admin' && <LatestFilledForms />}\r\n\t\t\t\t</div>\r\n\t\t\t</CenterTextCard>\r\n\t\t</PageCard>\r\n\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n","import Spinner from \"react-bootstrap/Spinner\";\r\n\r\nexport const PageCard = ({ children, title, isLoading, paddingSmall }) => {\r\n\treturn (\r\n\t\t<div className=\"my-8 card \">\r\n\t\t\t<h1 className=\"card-header\">\r\n\t\t\t\t<div className=\"card-title m-0\">\r\n\t\t\t\t\t<h3 className=\"fw-bolder m-0\">{title}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!isLoading ? null : (<div className=\"card-subtitle card-title m-0\">\r\n\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\tas=\"span\"\r\n\t\t\t\t\t\tanimation=\"grow\"\r\n\t\t\t\t\t\tsize=\"md\"\r\n\t\t\t\t\t\trole=\"status\"\r\n\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<p className=\"m-0\">Loading ...</p>\r\n\t\t\t\t</div>)}\r\n\r\n\t\t\t</h1>\r\n\t\t\t<div className={`card-body ${isLoading ? 'opacity-50' : null}`}>\r\n\t\t\t\t<div className={`${paddingSmall ? 'p-sm-0 px-md-3 px-lg-10' : 'p-sm-0 px-md-10 px-lg-20'}`} >\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n\r\nexport const CenterTextCard = ({ children, styles }) => {\r\n\treturn (\r\n\t\t<div className={`d-flex align-items-center justify-content-center`} style={styles} >\r\n\t\t\t<div className=\"text-center\">\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const AlertCard = ({ children, type, message }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={`alert alert-${type}`} role=\"alert\">\r\n\t\t\t\t<h4 className=\"alert-heading\">{type.replace(/^./, type[0].toUpperCase())}</h4>\r\n\t\t\t\t{message}\r\n\t\t\t\t{/* <hr /> */}\r\n\t\t\t\t{/* Whenever you need to, be sure to use margin utilities to keep things nice and tidy. */}\r\n\t\t\t</div>\r\n\t\t\t{children}\r\n\t\t</>\r\n\t);\r\n};\r\n","import axiosInstance from '../../../utils/axios.middleware.js';\r\n\r\nclass Question {\r\n\r\n\tstatic getLatestFilledForms = ({ _pageNo, _count }) => {\r\n\t\tlet apiPath = `/api/form/list-latest-filled-forms?_pageNo=${_pageNo}&_count=${_count}`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic getPatientEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-demo-edit-form?id=${id}&type=patient`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updatePatientDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'patient' });\r\n\t};\r\n\r\n\tstatic getCaregiverEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-demo-edit-form?id=${id}&type=caregiver`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateCaregiverDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'caregiver' });\r\n\t};\r\n\r\n\tstatic getChildEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-demo-edit-form?id=${id}&type=child`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateChildDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'child' });\r\n\t};\r\n\r\n}\r\n\r\nexport default Question;","import Form from '../services/form/form.js';\r\nimport actionErrorHandler from '../../helpers/actionErrorHandler.js';\r\n\r\nexport const getLatestFilledForms = (params) => {\r\n\treturn Form.getLatestFilledForms(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getPatientEditForm = (params) => {\r\n\treturn Form.getPatientEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updatePatientDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updatePatientDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getCaregiverEditForm = (params) => {\r\n\treturn Form.getCaregiverEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateCaregiverDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updateCaregiverDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getChildEditForm = (params) => {\r\n\treturn Form.getChildEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateChildDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updateChildDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};"],"names":["columns","name","selector","row","id","cellExport","cell","wrap","center","demographic","demo_section_answer","answer_text","dob","split","created_by","created_at","sortable","className","onClick","navigate","state","toast","error","type","useState","isLoading","setisLoading","data","setData","page","setPage","rowsPerPage","setRowsPerPage","totalUsers","setTotalUsers","useNavigate","tableData","useEffect","_getLatestFilledForms","getLatestFilledForms","_pageNo","_count","response","patients","total","noHeader","highlightOnHover","defaultSortField","defaultSortAsc","exportHeaders","progressComponent","text","vh100","progressPending","title","responsive","pagination","paginationServer","paginationDefaultPage","paginationPerPage","paginationTotalRows","onChangePage","Number","onChangeRowsPerPage","user","getUserProfile_c","useUserProfile","useTitle","to","Button","variant","styles","marginTop","role","PageCard","children","paddingSmall","as","animation","size","CenterTextCard","style","Question","apiPath","axiosInstance","get","getPatientEditForm","updatePatientDemo","dynamicQuestions","preDefinedQuestions","demo_id","patient_id","post","getCaregiverEditForm","updateCaregiverDemo","getChildEditForm","updateChildDemo","params","Form","then","status","message","catch","e","actionErrorHandler"],"sourceRoot":""}