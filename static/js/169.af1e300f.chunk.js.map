{"version":3,"file":"static/js/169.af1e300f.chunk.js","mappings":"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","sources":["component/Form/Edit/Section/Patient.jsx","component/Form/constants.js","component/commonComponents/Cards/HelperCards.jsx","helpers/form.helper.js","store/services/form/form.js","store/actions/form.action.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nimport { useEditFormContext } from '../../../../context/EditFormContextProvider.js';\r\nimport { useTitle } from '../../../../helpers/custom-hooks.js';\r\nimport { processScaleOptions } from '../../../../helpers/form.helper.js';\r\nimport { getEditPatientScales, updatePatientScales } from '../../../../store/actions/form.action.js';\r\nimport { PageCard } from \"../../../commonComponents/Cards/HelperCards.jsx\";\r\n// import { processScaleOptions } from '../../../../helpers/form.helper.js';\r\n\r\n\r\nconst Patient = () => {\r\n\tconst navigate = useNavigate();\r\n\tconst { getEditPatientId_c, getEditNavigateTo_c } = useEditFormContext();\r\n\tconst patient_id = getEditPatientId_c();\r\n\tconst EDIT_NAVIGATE_TO = getEditNavigateTo_c();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [alert, setAlert] = useState(true);\r\n\tconst [sections, setSections] = useState([{ heading: '', description: '', options: [], section_questions: [] }]);\r\n\tconst { register, handleSubmit, formState: { errors }, setValue } = useForm();\r\n\r\n\r\n\r\n\tuseTitle('Edit Patient Diagnostic Tools');\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t\tif (!patient_id) {\r\n\t\t\tnavigate(EDIT_NAVIGATE_TO.home);\r\n\t\t} else {\r\n\t\t\t_getEditPatientScales();\r\n\t\t}\r\n\r\n\t}, []);\r\n\r\n\tasync function _getEditPatientScales() {\r\n\t\tsetIsLoading(true);\r\n\t\tconst questions = await getEditPatientScales({ id: patient_id });\r\n\t\tif (questions.status === 200) {\r\n\t\t\t// setting dafult values\r\n\t\t\tvar regex = /^[\\u0600-\\u06FF]/;  // regix to check for the first urdu letter\r\n\t\t\tquestions.data.section.forEach(section => {\r\n\t\t\t\tsection.section_answers.forEach(answerObject => {\r\n\t\t\t\t\tconst answerValue = `${answerObject.section_option_id}-${parseInt(regex.test(answerObject.answer_text) ? 1 : 0)}-${answerObject.answer_text}`;\r\n\t\t\t\t\tconst answerName = `${patient_id}-${answerObject.section_id}-${answerObject.section_question_id}`;\r\n\t\t\t\t\tsetValue(`${answerName}`, `${answerValue}`);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tsetSections(questions.data.section);\r\n\t\t\tsetIsLoading(false);\r\n\t\t} else if (questions.status >= 400) {\r\n\t\t\ttoast.error(questions.message.message);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function handleData(data) {\r\n\t\tsetIsLoading(true);\r\n\t\tconst finalObject = processScaleOptions({ patient_id, data });\r\n\t\tconst response = await updatePatientScales({ patient_id, scales: finalObject.data });\r\n\t\tif (response.status === 200) {\r\n\t\t\ttoast.success(response.message.message);\r\n\t\t\tnavigate(EDIT_NAVIGATE_TO.caregiverScale);\r\n\t\t} else if (response.status >= 400) {\r\n\t\t\ttoast.error(response.message.message);\r\n\t\t}\r\n\t\tsetIsLoading(false);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<PageCard title={`Edit Patient Diagnostic Tools`} isLoading={isLoading} paddingSmall={true} >\r\n\r\n\t\t\t{alert ? <Alert variant=\"info\" dismissible onClose={() => setAlert(false)} >\r\n\t\t\t\t<Alert.Heading>Patient Diagnostic Tools</Alert.Heading>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<p className=\"mb-0\">\r\n\t\t\t\t\tThis is Patient's Diagnostic Tools data form. Please only fill patient's details here.\r\n\t\t\t\t</p>\r\n\t\t\t</Alert> : null}\r\n\r\n\r\n\t\t\t<div style={isLoading ? { pointerEvents: `none`, opacity: 0.5 } : {}}>\r\n\t\t\t\t<Form onSubmit={handleSubmit(handleData)} className='mt-10'>\r\n\r\n\t\t\t\t\t{sections.map((section, index) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Card className=\"mb-3 border border-3 p-3\" key={index}>\r\n\t\t\t\t\t\t\t\t<div className='d-flex justify-content-center'>\r\n\t\t\t\t\t\t\t\t\t<Card.Title>{section.heading}</Card.Title>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{/* Section Discription */}\r\n\t\t\t\t\t\t\t\t<div className=\"mb-2 text-muted\">\r\n\t\t\t\t\t\t\t\t\t{section.description?.split(',')?.map((questionDescription, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='px-auto' key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{section.is_description_in_urdu ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='d-flex justify-content-end'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p key={index} className=''>{questionDescription}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p key={index} className=''>{questionDescription}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Card.Body className='p-0'>\r\n\r\n\t\t\t\t\t\t\t\t\t{/* Section Options */}\r\n\r\n\t\t\t\t\t\t\t\t\t<Row className='text-bold'>\r\n\t\t\t\t\t\t\t\t\t\t<Col className='col-1'>\r\n\t\t\t\t\t\t\t\t\t\t\tNo.\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t<Col className='col-4'>\r\n\t\t\t\t\t\t\t\t\t\t\tQuestions\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t<Col className='m-0 p-0'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Row className='m-0 p-0'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{section.options.map((option, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col key={i} className='small p-0 m-0'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.option_text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{/* Section Questions */}\r\n\t\t\t\t\t\t\t\t\t{section.section_questions.map((question, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<Row className='mt-5' key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className='col-1'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{index + 1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className='col-4'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{section.heading.toLowerCase().trim() === 'mania'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? question.question_text.split(',').map((opt, i) => (<p>{i + 1 + ') ' + opt} <br /></p>))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: question.is_question_in_urdu ? <div className='d-flex justify-content-end'>{question.question_text}</div> : question.question_text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className='m-0 p-0'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Row className='m-0 p-0'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{section.options.map((option, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className='small p-0 m-0' key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check type=\"radio\" {...register(`${patient_id}-${section.id}-${question.id}`, { required: !question.is_nullable })} value={`${option.id}-${Number(option.is_option_in_urdu)}-${option.option_text}`} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t{errors[`${patient_id}-${section.id}-${question.id}`] && <span className='text-danger ps-20'>This field is required</span>}\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t<Form.Group className=\"mb-3\">\r\n\t\t\t\t\t\t<Button className=\"mb-3\" variant=\"secondary\" type=\"button\" onClick={() => navigate(EDIT_NAVIGATE_TO.child, { state: { id: patient_id } })}>\r\n\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button className=\"mb-3 float-end\" variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</PageCard>\r\n\t);\r\n};\r\n\r\nexport default Patient;","\r\n// Question Response \r\n\r\n// {\r\n// \tid: 43;\r\n// \tisActive: true;\r\n\r\n// \tis_caregiver: true;\r\n// \tis_child: false;\r\n// \tis_patient: true;\r\n\r\n// \tquestion_text: \"Contact No\";\r\n\r\n// \tis_text_type: false;\r\n// \tis_number_type: true;\r\n// \tis_date_type: false;\r\n// \tis_radio_type: false;\r\n// \tradio_options: \"\";\r\n\r\n// is_patient_nullable: true,\r\n// is_caregiver_nullable: true,\r\n// is_child_nullable: true,\r\n\r\n// \tcreated_at: \"2023-03-19T14:38:49.000Z\";\r\n// \tupdated_at: \"2023-03-19T14:38:49.895Z\";\r\n// }\r\n\r\nexport const initialQuestions = [\r\n\t{\r\n\t\tlabel: 'Name',\r\n\t\turdu_label: 'نام',\r\n\t\ttype: 'text',\r\n\t\tname: 'name',\r\n\t\trequired: false\r\n\t},\r\n\t{\r\n\t\tlabel: 'Gender',\r\n\t\turdu_label: 'صنف',\r\n\t\ttype: 'radio',\r\n\t\tname: 'gender',\r\n\t\trequired: true,\r\n\t\tradio_options: ['male', 'female']\r\n\t},\r\n\t{\r\n\t\tlabel: 'Age',\r\n\t\turdu_label: 'عمر',\r\n\t\ttype: 'number',\r\n\t\tname: 'age',\r\n\t\trequired: true,\r\n\t},\r\n\t{\r\n\t\tlabel: 'Date of Birth',\r\n\t\turdu_label: 'عمر',\r\n\t\ttype: 'date',\r\n\t\tname: 'dob',\r\n\t\trequired: true,\r\n\t},\r\n];","import Spinner from \"react-bootstrap/Spinner\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const PageCard = ({ children, title, isLoading, paddingSmall, resetCookieAndLocalStorage }) => {\r\n\tconst navigate = useNavigate();\r\n\tconst clearFormCache = () => {\r\n\t\tconst shouldClear = window.confirm('Are you sure you want to clear cache?');\r\n\t\tif (shouldClear) {\r\n\t\t\tresetCookieAndLocalStorage();\r\n\t\t\tnavigate(\"/\");\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"my-8 card \">\r\n\t\t\t<h1 className=\"card-header\">\r\n\t\t\t\t<div className=\"card-title m-0\">\r\n\t\t\t\t\t<h3 className=\"fw-bolder m-0\">{title}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!isLoading ? null : (<div className=\"card-subtitle card-title m-0\">\r\n\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\tas=\"span\"\r\n\t\t\t\t\t\tanimation=\"grow\"\r\n\t\t\t\t\t\tsize=\"md\"\r\n\t\t\t\t\t\trole=\"status\"\r\n\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<p className=\"m-0\">Loading ...</p>\r\n\t\t\t\t</div>)}\r\n\t\t\t\t{resetCookieAndLocalStorage &&\r\n\t\t\t\t\t<div className=\"card-subtitle card-title m-0\">\r\n\t\t\t\t\t\t<Button variant=\"outline-danger\" className=\"m-0\" onClick={clearFormCache} >Clear Form Cache</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</h1>\r\n\t\t\t<div className={`card-body ${isLoading ? 'opacity-50' : null}`} style={isLoading ? { pointerEvents: \"none\" } : {}}>\r\n\t\t\t\t<div className={`${paddingSmall ? 'p-sm-0 px-md-3 px-lg-10' : 'p-sm-0 px-md-10 px-lg-20'}`} >\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n\r\nexport const CenterTextCard = ({ children, styles }) => {\r\n\treturn (\r\n\t\t<div className={`d-flex align-items-center justify-content-center`} style={styles} >\r\n\t\t\t<div className=\"text-center\">\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const AlertCard = ({ children, type, message }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={`alert alert-${type}`} role=\"alert\">\r\n\t\t\t\t<h4 className=\"alert-heading\">{type.replace(/^./, type[0].toUpperCase())}</h4>\r\n\t\t\t\t{message}\r\n\t\t\t\t{/* <hr /> */}\r\n\t\t\t\t{/* Whenever you need to, be sure to use margin utilities to keep things nice and tidy. */}\r\n\t\t\t</div>\r\n\t\t\t{children}\r\n\t\t</>\r\n\t);\r\n};\r\n","import { initialQuestions } from \"../component/Form/constants.js\";\r\n\r\n\r\nexport const validateChildren = (children, noOfChildren) => {\r\n\r\n\t// i must have children.lenght that is equal to 1. However, if the noOfChildren is 0, then children.length will be 1\r\n\t// validate if noOfChildren is 0, skip the validation and return true\r\n\tif (noOfChildren === 0) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// validate if data is empty, return false\r\n\tif (!children) {\r\n\t\treturn false;\r\n\t}\r\n\t// validate if data is not an array, return false\r\n\tif (!Array.isArray(children) || children.length !== noOfChildren) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// validate if every object of the array has the required keys\r\n\tlet isValid = true;\r\n\tfor (let i = 0; i < children.length; i++) {\r\n\t\tconst child = children[i];\r\n\t\tif (child.age.length === 0 || child.education_level.length === 0) {\r\n\t\t\tisValid = false;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn isValid;\r\n};\r\n\r\n\r\nexport const processPatientDemoOptions = ({ data, children, noOfChildren }) => {\r\n\treturn processDemoOptions({ data, children, noOfChildren, patient_id: null });\r\n};\r\n\r\nexport const processCaregiverDemoOptions = ({ data, children, noOfChildren, patient_id }) => {\r\n\treturn processDemoOptions({ data, children, noOfChildren, patient_id });\r\n};\r\n\r\nexport const processChildDemoOptions = ({ data, patient_id }) => {\r\n\r\n\t// 1. hardcoded questions\r\n\tlet initialQuestionsKeys = initialQuestions.map((question) => question.name);\r\n\tlet preDefinedQuestions = initialQuestionsKeys.reduce((acc, key) => {\r\n\t\tacc[key] = data[key];\r\n\t\treturn acc;\r\n\t}, {});\r\n\r\n\t// 2. dynamic questions\r\n\tconst dynamicQuestions = {\r\n\t\tdynamicKeys: Object.keys(data).map((key) => Number(key)),\r\n\t\tdynamicData: data\r\n\t};\r\n\treturn {\r\n\t\tdynamicQuestions,\r\n\t\tpreDefinedQuestions,\r\n\t\tpatient_id\r\n\t};\r\n\r\n\r\n};\r\n\r\nexport const processScaleOptions = ({ patient_id, data }) => {\r\n\tconst dataObject = [];\r\n\tfor (const [key, value] of Object.entries(data)) {\r\n\t\tif (!value) continue;\r\n\r\n\t\tconst [patient_id, section_id, question_id] = key?.split('-');\r\n\t\tconst [option_id, is_answer_in_urdu, option_text] = value?.split('-');\r\n\t\tdataObject.push({\r\n\t\t\tpatient_id: parseInt(patient_id),\r\n\t\t\tsection_id: parseInt(section_id),\r\n\t\t\tsection_question_id: parseInt(question_id),\r\n\t\t\tsection_option_id: parseInt(option_id),\r\n\t\t\tanswer_text: option_text,\r\n\t\t\tis_answer_in_urdu: Boolean(Number(is_answer_in_urdu)),\r\n\t\t});\r\n\t}\r\n\r\n\treturn {\r\n\t\tpatient_id,\r\n\t\tdata: dataObject,\r\n\t};\r\n};\r\n\r\nfunction processDemoOptions({ data, children, noOfChildren, patient_id }) {\r\n\t// 1. hardcoded questions\r\n\tlet initialQuestionsKeys = initialQuestions.map((question) => question.name);\r\n\tlet preDefinedQuestions = initialQuestionsKeys.reduce((acc, key) => {\r\n\t\tacc[key] = data[key];\r\n\t\treturn acc;\r\n\t}, {});\r\n\tpreDefinedQuestions.no_of_children = noOfChildren;\r\n\tchildren.forEach((child) => {\r\n\t\tpreDefinedQuestions.children_age = preDefinedQuestions.children_age ? preDefinedQuestions.children_age + ',' + child.age.toString() : child.age.toString();\r\n\t\t// in preDefinedQuestions.children_education_level, replace commas with white spaces to avoid confusion with csv\r\n\t\tpreDefinedQuestions.children_education_level = preDefinedQuestions.children_education_level ? preDefinedQuestions.children_education_level + ',' + child.education_level?.replace(',', ' ').toString() : child.education_level?.replace(',', ' ').toString();\r\n\t});\r\n\r\n\t// 2. dynamic questions\r\n\tconst dynamicQuestions = {\r\n\t\tdynamicKeys: Object.keys(data).map((key) => Number(key)),\r\n\t\tdynamicData: data\r\n\t};\r\n\r\n\tlet returnObj = {\r\n\t\tdynamicQuestions,\r\n\t\tpreDefinedQuestions,\r\n\t};\r\n\r\n\tif (patient_id)\r\n\t\treturn {\r\n\t\t\t...returnObj,\r\n\t\t\tpatient_id\r\n\t\t};\r\n\treturn returnObj;\r\n};","import axiosInstance from '../../../utils/axios.middleware.js';\r\n\r\nclass Question {\r\n\r\n\tstatic getLatestFilledForms = ({ _pageNo, _count }) => {\r\n\t\tlet apiPath = `/api/form/list-latest-filled-forms?_pageNo=${_pageNo}&_count=${_count}`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic getPatientEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-demo?id=${id}&type=patient`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updatePatientDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'patient' });\r\n\t};\r\n\r\n\tstatic getCaregiverEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-demo?id=${id}&type=caregiver`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateCaregiverDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'caregiver' });\r\n\t};\r\n\r\n\tstatic getChildEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-demo?id=${id}&type=child`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateChildDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'child' });\r\n\t};\r\n\r\n\tstatic getEditPatientScales = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-scale?id=${id}&type=patient`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updatePatientScales = ({ patient_id, scales }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-scale`;\r\n\t\treturn axiosInstance.post(apiPath, { patient_id, scales, type: 'patient' });\r\n\t};\r\n\r\n\tstatic getEditCaregiverScales = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-scale?id=${id}&type=caregiver`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateCaregiverScales = ({ patient_id, scales }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-scale`;\r\n\t\treturn axiosInstance.post(apiPath, { patient_id, scales, type: 'caregiver' });\r\n\t};\r\n\r\n\tstatic getEditChildScales = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-scale?id=${id}&type=child`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateChildScales = ({ patient_id, scales }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-scale`;\r\n\t\treturn axiosInstance.post(apiPath, { patient_id, scales, type: 'child' });\r\n\t};\r\n\r\n}\r\n\r\nexport default Question;","import Form from '../services/form/form.js';\r\nimport actionErrorHandler from '../../helpers/actionErrorHandler.js';\r\n\r\nexport const getLatestFilledForms = (params) => {\r\n\treturn Form.getLatestFilledForms(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getPatientEditForm = (params) => {\r\n\treturn Form.getPatientEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updatePatientDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updatePatientDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getCaregiverEditForm = (params) => {\r\n\treturn Form.getCaregiverEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateCaregiverDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updateCaregiverDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getChildEditForm = (params) => {\r\n\treturn Form.getChildEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateChildDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updateChildDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getEditPatientScales = ({ id }) => {\r\n\treturn Form.getEditPatientScales({ id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updatePatientScales = ({ patient_id, scales }) => {\r\n\treturn Form.updatePatientScales({ patient_id, scales })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getEditCaregiverScales = ({ id }) => {\r\n\treturn Form.getEditCaregiverScales({ id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\tconsole.log(e);\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateCaregiverScales = ({ patient_id, scales }) => {\r\n\treturn Form.updateCaregiverScales({ patient_id, scales })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getEditChildScales = ({ id }) => {\r\n\treturn Form.getEditChildScales({ id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t}).catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateChildScales = ({ patient_id, scales }) => {\r\n\treturn Form.updateChildScales({ patient_id, scales })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\"\r\n\t\t\t};\r\n\t\t}).catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["navigate","useNavigate","useEditFormContext","getEditPatientId_c","getEditNavigateTo_c","patient_id","EDIT_NAVIGATE_TO","useState","isLoading","setIsLoading","alert","setAlert","heading","description","options","section_questions","sections","setSections","useForm","register","handleSubmit","errors","formState","setValue","getEditPatientScales","id","questions","status","regex","data","section","forEach","section_answers","answerObject","answerValue","section_option_id","parseInt","test","answer_text","answerName","section_id","section_question_id","toast","error","message","finalObject","processScaleOptions","updatePatientScales","scales","response","success","caregiverScale","useTitle","useEffect","window","scrollTo","_getEditPatientScales","home","title","paddingSmall","variant","dismissible","onClose","Heading","className","style","pointerEvents","opacity","onSubmit","map","index","Title","split","questionDescription","is_description_in_urdu","Body","option","i","option_text","question","toLowerCase","trim","question_text","opt","is_question_in_urdu","Check","type","required","is_nullable","value","Number","is_option_in_urdu","Group","onClick","child","state","initialQuestions","label","urdu_label","name","radio_options","PageCard","children","resetCookieAndLocalStorage","as","animation","size","role","confirm","CenterTextCard","styles","validateChildren","noOfChildren","Array","isArray","length","isValid","age","education_level","processPatientDemoOptions","processDemoOptions","processCaregiverDemoOptions","processChildDemoOptions","preDefinedQuestions","reduce","acc","key","dynamicQuestions","dynamicKeys","Object","keys","dynamicData","dataObject","entries","question_id","option_id","is_answer_in_urdu","push","Boolean","no_of_children","children_age","toString","children_education_level","replace","returnObj","Question","getLatestFilledForms","_pageNo","_count","apiPath","axiosInstance","get","getPatientEditForm","updatePatientDemo","demo_id","post","getCaregiverEditForm","updateCaregiverDemo","getChildEditForm","updateChildDemo","getEditCaregiverScales","updateCaregiverScales","getEditChildScales","updateChildScales","params","Form","then","catch","e","actionErrorHandler","console","log","CardImg","React","ref","bsPrefix","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","assign","Img","Subtitle","Link","Text","Header","Footer","ImgOverlay","context","Row","decoratedBsPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","brkPoint","cols","propValue","infix"],"sourceRoot":""}