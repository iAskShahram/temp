{"version":3,"file":"static/js/73.5222bf65.chunk.js","mappings":"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","sources":["component/City/ListCity.jsx","store/services/city/city.js","store/actions/city.action.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport DataTableExtensions from \"react-data-table-component-extensions\";\r\nimport \"react-data-table-component-extensions/dist/index.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { listCities } from \"../../store/actions/city.action.js\";\r\n\r\nimport Loader from \"../commonComponents/Loader/Loader\";\r\nimport { useTitle } from '../../helpers/custom-hooks.js';\r\n\r\nconst ListCity = () => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [pageChange, setPageChange] = useState(1);\r\n\tconst [rowsPerPageChange, setRowsPerPageChange] = useState(10);\r\n\tconst [data, setData] = useState([]);\r\n\tconst [totalCities, setTotalCities] = useState(0);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\tname: \"City Name\",\r\n\t\t\tcenter: true,\r\n\t\t\tselector: row => row.name,\r\n\t\t\tcellExport: row => row.name,\r\n\t\t\twrap: true,\r\n\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Created At\",\r\n\t\t\tcenter: true,\r\n\t\t\tselector: row => row.created_at,\r\n\t\t\tcellExport: row => row.created_at,\r\n\t\t\twrap: true,\r\n\t\t\tcell: (row) => row.created_at?.split(\"T\")[0]\r\n\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Created By\",\r\n\t\t\tcenter: true,\r\n\t\t\tselector: row => row.created_by?.name,\r\n\t\t\tcellExport: row => row.created_by?.name,\r\n\t\t\twrap: true,\r\n\r\n\t\t},\r\n\t];\r\n\r\n\tconst tableData = {\r\n\t\tcolumns,\r\n\t\tdata,\r\n\t};\r\n\r\n\tuseTitle(\"List Cities\");\r\n\r\n\tuseEffect(() => {\r\n\t\t_getCities();\r\n\t}, [pageChange, rowsPerPageChange]);\r\n\r\n\r\n\tasync function _getCities() {\r\n\t\tsetIsLoading(true);\r\n\t\tlet response = await listCities({\r\n\t\t\t_pageNo: pageChange,\r\n\t\t\t_count: rowsPerPageChange\r\n\t\t});\r\n\t\tsetIsLoading(false);\r\n\t\tif (response.status === 200) {\r\n\t\t\tsetData(response.data.cities);\r\n\t\t\tsetTotalCities(response.data.total);\r\n\t\t} else if (response.status >= 400) {\r\n\t\t\ttoast.warn(\"failed to get cities\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\treturn isLoading ? (\r\n\t\t<Loader text=\"Loading Cities\" />\r\n\t) : (\r\n\t\t<div className=\"my-8 card\">\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"card-header border-0 cursor-pointer\"\r\n\t\t\t\trole=\"button\"\r\n\t\t\t\tdata-bs-toggle=\"collapse\"\r\n\t\t\t\tdata-bs-target=\"#kt_account_profile_details\"\r\n\t\t\t\taria-expanded=\"true\"\r\n\t\t\t\taria-controls=\"kt_account_profile_details\"\r\n\t\t\t>\r\n\t\t\t\t<div className=\"card-title m-0\">\r\n\t\t\t\t\t<h3 className=\"fw-bolder m-0\">Cities' List</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card-body border-top p-9\">\r\n\t\t\t\t<DataTableExtensions {...tableData}>\r\n\t\t\t\t\t<DataTable\r\n\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\tnoHeader\r\n\t\t\t\t\t\thighlightOnHover\r\n\t\t\t\t\t\tdefaultSortField=\"id\"\r\n\t\t\t\t\t\tdefaultSortAsc={true}\r\n\t\t\t\t\t\texportHeaders={true}\r\n\r\n\t\t\t\t\t\tpagination\r\n\t\t\t\t\t\tpaginationServer\r\n\t\t\t\t\t\tpaginationDefaultPage={pageChange}\r\n\t\t\t\t\t\tpaginationPerPage={rowsPerPageChange}\r\n\t\t\t\t\t\tpaginationTotalRows={totalCities}\r\n\r\n\t\t\t\t\t\tonChangePage={(page) => setPageChange(Number(page))}\r\n\t\t\t\t\t\tonChangeRowsPerPage={(row) => setRowsPerPageChange(Number(row))}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DataTableExtensions>\r\n\t\t\t</div>\r\n\t\t\t<ToastContainer />\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default ListCity;\r\n","import axiosInstance from '../../../utils/axios.middleware.js';\r\n\r\nclass City {\r\n\r\n\tstatic listCities = (params) => {\r\n\r\n\t\tlet apiPath = `/api/city/list-cities?_pageNo=${params?._pageNo}&_count=${params?._count}`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\r\n\t};\r\n\r\n\r\n\tstatic createCity = (form) => {\r\n\r\n\t\tlet apiPath = 'api/city';\r\n\t\treturn axiosInstance.post(apiPath, {\r\n\t\t\t...form\r\n\t\t});\r\n\r\n\t};\r\n\r\n}\r\nexport default City;","import City from \"../services/city/city.js\";\r\nimport actionErrorHandler from '../../helpers/actionErrorHandler.js';\r\n\r\nexport const listCities = (params) => {\r\n\treturn City.listCities(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\n\r\n\r\n\r\nexport const createCity = (form) => {\r\n\r\n\treturn City.createCity(form).then(response => {\r\n\t\treturn { status: response.status, data: response.data, message: \"Request Success\" };\r\n\t}).catch(e => {\r\n\t\treturn actionErrorHandler(e);\r\n\t});\r\n\r\n};\r\n"],"names":["useState","isLoading","setIsLoading","pageChange","setPageChange","rowsPerPageChange","setRowsPerPageChange","data","setData","totalCities","setTotalCities","columns","name","center","selector","row","cellExport","wrap","created_at","cell","split","created_by","tableData","listCities","_pageNo","_count","response","status","cities","total","toast","warn","useTitle","useEffect","_getCities","text","className","role","noHeader","highlightOnHover","defaultSortField","defaultSortAsc","exportHeaders","pagination","paginationServer","paginationDefaultPage","paginationPerPage","paginationTotalRows","onChangePage","page","Number","onChangeRowsPerPage","City","params","apiPath","axiosInstance","get","createCity","form","post","then","message","catch","e","actionErrorHandler"],"sourceRoot":""}