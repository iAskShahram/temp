{"version":3,"file":"static/js/634.a1c65e0a.chunk.js","mappings":"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","sources":["component/Form/Edit/Edit.jsx","component/Form/constants.js","component/commonComponents/Cards/HelperCards.jsx","helpers/form.helper.js","store/services/form/form.js","store/actions/form.action.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { useEditFormContext } from '../../../context/EditFormContextProvider.js';\r\nimport { useMediaQuery, useTitle } from '../../../helpers/custom-hooks';\r\nimport { processPatientDemoOptions, validateChildren } from '../../../helpers/form.helper';\r\nimport { getPatientEditForm, updatePatientDemo } from '../../../store/actions/form.action';\r\nimport { PageCard } from '../../commonComponents/Cards/HelperCards';\r\nimport { initialQuestions } from '../constants';\r\n\r\n\r\nconst Edit = () => {\r\n\tconst location = useLocation();\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst [alert, setAlert] = useState(true);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [noOfChildren, setNoOfChildren] = useState(0);\r\n\tconst [children, setChildren] = useState([\r\n\t\t{\r\n\t\t\tage: '',\r\n\t\t\teducation_level: ''\r\n\t\t}\r\n\t]);\r\n\tconst [questions, setQuestions] = useState([\r\n\t\t{\r\n\t\t\tanswer_text: \"\",\r\n\t\t\tid: 0,\r\n\t\t\tis_date_type: false,\r\n\t\t\tis_nullable: false,\r\n\t\t\tis_number_type: false,\r\n\t\t\tis_radio_type: false,\r\n\t\t\tis_text_type: false,\r\n\t\t\tquestion_text: \"\",\r\n\t\t\tquestion_urdu_text: \"\",\r\n\t\t\tradio_options: ''\r\n\t\t}\r\n\t]);\r\n\r\n\tconst isDesktop = useMediaQuery('(min-width: 992px)');\r\n\tconst { register, handleSubmit, formState: { errors }, setValue } = useForm();\r\n\tconst { setEditPatientId_c, getEditNavigateTo_c, resetAllEdit_c } = useEditFormContext();\r\n\tconst EDIT_NAVIGATE_TO = getEditNavigateTo_c();\r\n\r\n\tuseTitle('Edit Form');\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t\tresetAllEdit_c();\r\n\t\tif (!location.state?.id) {\r\n\t\t\tnavigate('/');\r\n\t\t} else {\r\n\t\t\tsetEditPatientId_c(location.state?.id);\r\n\t\t\t_getPatientEditForm();\r\n\t\t}\r\n\t}, []);\r\n\r\n\tasync function _getPatientEditForm() {\r\n\t\tconst patient_id = location.state?.id;\r\n\t\tif (!patient_id) {\r\n\t\t\ttoast.error('No ID Found');\r\n\t\t\treturn navigate('/');\r\n\t\t}\r\n\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst response = await getPatientEditForm({ id: patient_id });\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\t// Starts - set state for children and predefined questions\r\n\t\t\t\tsetNoOfChildren(parseInt(response.data.patient.demographic[0].children.no_of_children));\r\n\t\t\t\tconst children = [];\r\n\t\t\t\tconst childrenAge = response.data.patient.demographic[0].children.children_age.split(',');\r\n\t\t\t\tconst childrenEducationLevel = response.data.patient.demographic[0].children.children_education_level.split(',');\r\n\t\t\t\tfor (let i = 0; i < parseInt(response.data.patient.demographic[0].children.no_of_children); i++) {\r\n\t\t\t\t\tchildren.push({\r\n\t\t\t\t\t\tage: parseInt(childrenAge[i]),\r\n\t\t\t\t\t\teducation_level: childrenEducationLevel[i]\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tsetChildren(children);\r\n\r\n\t\t\t\tsetValue('no_of_children', parseInt(response.data.patient.demographic[0].children.no_of_children));\r\n\t\t\t\tsetValue('children_age', parseInt(response.data.patient.demographic[0].children.children_age));\r\n\t\t\t\tinitialQuestions.forEach((question) => {\r\n\t\t\t\t\tif (question.type === 'date') {\r\n\t\t\t\t\t\tsetValue(question.name, response.data.patient.demographic[0][question.name].split('T')[0]);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetValue(question.name, response.data.patient.demographic[0][question.name]);\r\n\t\t\t\t});\r\n\t\t\t\t// Ends - set state for children and predefined questions\r\n\r\n\t\t\t\t// set value for demo_id\r\n\t\t\t\tsetValue('patient_id', parseInt(patient_id));\r\n\t\t\t\tsetValue('demo_id', parseInt(response.data.patient.demographic[0].demo_section_answer[0].demo_id));\r\n\r\n\t\t\t\t// Starts - set state for dynamic questions\r\n\t\t\t\tconst demoSectionQuestionsAndAnswers = response.data.patient.demographic[0].demo_section_answer.map((question, index) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: question.question.id, //  this is the demo_section_answer id, rest is related to question.\r\n\t\t\t\t\t\tanswer_text: question.answer_text,\r\n\t\t\t\t\t\tquestion_text: question.question.question_text,\r\n\t\t\t\t\t\tis_nullable: question.question.is_nullable,\r\n\t\t\t\t\t\tquestion_urdu_text: question.question.question_urdu_text || \"\",\r\n\t\t\t\t\t\tradio_options: question.question.radio_options,\r\n\t\t\t\t\t\tis_radio_type: question.question.is_radio_type,\r\n\t\t\t\t\t\tis_date_type: question.question.is_date_type,\r\n\t\t\t\t\t\tis_number_type: question.question.is_number_type,\r\n\t\t\t\t\t\tis_text_type: question.question.is_text_type,\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetQuestions(demoSectionQuestionsAndAnswers);\r\n\t\t\t\tdemoSectionQuestionsAndAnswers.forEach((question) => {\r\n\t\t\t\t\tsetValue(`${question.id}`, question.answer_text);\r\n\t\t\t\t});\r\n\t\t\t\t// Ends - set state for dynamic questions\r\n\r\n\t\t\t\tsetEditPatientId_c(patient_id);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t} else if (response.status >= 400) {\r\n\t\t\t\ttoast.error(response.message.message);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\ttoast.error(err.message);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function handleData(data) {\r\n\t\t// this is data after it is validated\r\n\t\tconst patient_id = parseInt(data.patient_id);\r\n\t\tif (!patient_id || isNaN(patient_id)) {\r\n\t\t\ttoast.error('Error processing the form, please try again later');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!validateChildren(children, noOfChildren)) {\r\n\t\t\ttoast.error('Please fill all the fields of children');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst demo_id = parseInt(data.demo_id);\r\n\t\tif (!demo_id || isNaN(demo_id)) {\r\n\t\t\ttoast.error('Error processing the form, please try again later');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst finalOptions = processPatientDemoOptions({ data, children, noOfChildren });\r\n\t\t\tconst response = await updatePatientDemo({ demo_id, patient_id, ...finalOptions });\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tsetEditPatientId_c(patient_id);\r\n\t\t\t\tnavigate(EDIT_NAVIGATE_TO.caregiver);\r\n\t\t\t} else if (response.status >= 400) {\r\n\t\t\t\ttoast.error('Some Error Occured!');\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\ttoast.error(err.message);\r\n\t\t}\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PageCard title=\"Edit Patient Demographics\" isLoading={isLoading}>\r\n\t\t\t\t{alert ? <Alert variant=\"info\" dismissible onClose={() => setAlert(false)} >\r\n\t\t\t\t\t<Alert.Heading>Edit Patient Demographics</Alert.Heading>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<p className=\"mb-0\">\r\n\t\t\t\t\t\tThis is patient's data form. Please only fill patient's demographics here.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Alert> : null}\r\n\r\n\t\t\t\t<div style={isLoading ? { pointerEvents: `none`, opacity: 0.5 } : {}}>\r\n\t\t\t\t\t<Form onSubmit={handleSubmit(handleData)}>\r\n\r\n\r\n\t\t\t\t\t\t{/* These are hardcoded questions. arounf 4-5 that collect general information about the target */}\r\n\t\t\t\t\t\t{initialQuestions.map((formGroup, index) => (\r\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId={formGroup.name} key={index}>\r\n\t\t\t\t\t\t\t\t<Form.Label className='row d-flex justify-content-between'>\r\n\t\t\t\t\t\t\t\t\t<div className={`${formGroup.urdu_label.length > 0 ? 'col-md-6' : 'col-12'}`}>\r\n\t\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\t\t{`${formGroup.label} : `}{formGroup.required ? <span className='text-danger'>*</span> : null}\r\n\t\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t{formGroup.urdu_label.length > 0 ?\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-md-6 text-end'>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{formGroup.required ? <span className='text-danger'>*</span> : null}{` : ${formGroup.urdu_label}`}\r\n\t\t\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<div className='px-10'>\r\n\t\t\t\t\t\t\t\t\t{formGroup.type === 'radio' ?\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Select\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\tid={`${formGroup.name}-${index}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...register(formGroup.name, { required: formGroup.required })}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={``} key={0}>Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{formGroup.radio_options.map((option, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option key={i + 1} value={option}>{option}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype={formGroup.type}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...register(formGroup.name, { required: formGroup.required })}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{errors[formGroup.name] && <span className=\"text-danger\">This field is required</span>}\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t))}\r\n\r\n\r\n\t\t\t\t\t\t{/* custom feilds for children data  - Start */}\r\n\t\t\t\t\t\t{/* first question: number of children */}\r\n\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"no_of_children\">\r\n\t\t\t\t\t\t\t<Form.Label><b>{`No of children : `}<span className='text-danger'>*</span></b></Form.Label>\r\n\t\t\t\t\t\t\t<div className='px-10'>\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\tvalue={noOfChildren}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\tif (Number(e.target.value) > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tsetNoOfChildren(Number(e.target.value));\r\n\t\t\t\t\t\t\t\t\t\t\tsetChildren([...Array(Number(e.target.value)).keys()].map((_) => ({\r\n\t\t\t\t\t\t\t\t\t\t\t\tage: '',\r\n\t\t\t\t\t\t\t\t\t\t\t\teducation_level: ''\r\n\t\t\t\t\t\t\t\t\t\t\t})));\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\ttoast.error('Number of children cannot be less than 1');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t{/* if number of children are greater than 0 then ask ages of every children and their education level  */}\r\n\t\t\t\t\t\t{noOfChildren > 0 ? children.map((_, index) => (\r\n\t\t\t\t\t\t\t<div key={index} className='row'>\r\n\r\n\t\t\t\t\t\t\t\t<div className='col-4'>\r\n\t\t\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"age\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label><b>{`Age of child ${index + 1}: `}<span className='text-danger'>*</span></b></Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<div className={`${isDesktop ? 'px-10' : 'px-2'}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst newChildren = [...children];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewChildren[index].age = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetChildren(newChildren);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={children[index].age}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className='col-8'>\r\n\t\t\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"education_level\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label><b>{`Education level of child ${index + 1} : `}<span className='text-danger'>*</span></b></Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<div className={`${isDesktop ? 'px-10' : 'px-2'}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst newChildren = [...children];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewChildren[index].education_level = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetChildren(newChildren);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={children[index].education_level}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)) : null}\r\n\t\t\t\t\t\t{/* custom feilds for children data  - End */}\r\n\r\n\r\n\r\n\t\t\t\t\t\t{/* These are rest af the quesrions fetched from the database */}\r\n\t\t\t\t\t\t{questions.map((formGroup, index) => (\r\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId={formGroup.id} key={index} >\r\n\t\t\t\t\t\t\t\t<Form.Label className='row d-flex justify-content-between'>\r\n\t\t\t\t\t\t\t\t\t<div className={`${formGroup.question_urdu_text?.length > 0 ? 'col-md-6' : 'col-12'}`}>\r\n\t\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\t\t{`${formGroup.question_text} : `}{!formGroup.is_nullable ? <span className='text-danger'>*</span> : null}\r\n\t\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t{formGroup.question_urdu_text?.length > 0 ?\r\n\t\t\t\t\t\t\t\t\t\t<div className='col-md-6 text-end'>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{!formGroup.is_nullable ? <span className='text-danger'>*</span> : null}{` : ${formGroup.question_urdu_text}`}\r\n\t\t\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t\t<div className='px-10'>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tformGroup.is_text_type ?\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...register(formGroup.id?.toString(), { required: !formGroup.is_nullable })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\tformGroup.is_number_type ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...register(formGroup.id?.toString(), { required: !formGroup.is_nullable })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\tformGroup.is_date_type ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...register(formGroup.id?.toString(), { required: !formGroup.is_nullable })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tformGroup.is_radio_type ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// type='radio'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={`${formGroup.id}-${index}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...register(formGroup.id?.toString(), { required: !formGroup.is_nullable })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\" key='0'>Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{formGroup.radio_options?.split(',').map((option, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option key={`default-${formGroup.id}-${i}`} value={option}>{option}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{errors[formGroup.id?.toString()] ? <span className=\"text-danger\">This field is required</span> : null}\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t))}\r\n\r\n\r\n\t\t\t\t\t\t<Form.Group className=\"mb-3\">\r\n\t\t\t\t\t\t\t<Button className=\"mb-3 float-end\" variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</div>\r\n\t\t\t</PageCard>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Edit;","\r\n// Question Response \r\n\r\n// {\r\n// \tid: 43;\r\n// \tisActive: true;\r\n\r\n// \tis_caregiver: true;\r\n// \tis_child: false;\r\n// \tis_patient: true;\r\n\r\n// \tquestion_text: \"Contact No\";\r\n\r\n// \tis_text_type: false;\r\n// \tis_number_type: true;\r\n// \tis_date_type: false;\r\n// \tis_radio_type: false;\r\n// \tradio_options: \"\";\r\n\r\n// \tis_nullable: false;\r\n\r\n// \tcreated_at: \"2023-03-19T14:38:49.000Z\";\r\n// \tupdated_at: \"2023-03-19T14:38:49.895Z\";\r\n// }\r\n\r\nexport const initialQuestions = [\r\n\t{\r\n\t\tlabel: 'Name',\r\n\t\turdu_label: 'نام',\r\n\t\ttype: 'text',\r\n\t\tname: 'name',\r\n\t\trequired: false\r\n\t},\r\n\t{\r\n\t\tlabel: 'Gender',\r\n\t\turdu_label: 'صنف',\r\n\t\ttype: 'radio',\r\n\t\tname: 'gender',\r\n\t\trequired: true,\r\n\t\tradio_options: ['male', 'female']\r\n\t},\r\n\t{\r\n\t\tlabel: 'Age',\r\n\t\turdu_label: 'عمر',\r\n\t\ttype: 'number',\r\n\t\tname: 'age',\r\n\t\trequired: true,\r\n\t},\r\n\t{\r\n\t\tlabel: 'Date of Birth',\r\n\t\turdu_label: 'عمر',\r\n\t\ttype: 'date',\r\n\t\tname: 'dob',\r\n\t\trequired: true,\r\n\t},\r\n];","import Spinner from \"react-bootstrap/Spinner\";\r\n\r\nexport const PageCard = ({ children, title, isLoading, paddingSmall }) => {\r\n\treturn (\r\n\t\t<div className=\"my-8 card \">\r\n\t\t\t<h1 className=\"card-header\">\r\n\t\t\t\t<div className=\"card-title m-0\">\r\n\t\t\t\t\t<h3 className=\"fw-bolder m-0\">{title}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!isLoading ? null : (<div className=\"card-subtitle card-title m-0\">\r\n\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\tas=\"span\"\r\n\t\t\t\t\t\tanimation=\"grow\"\r\n\t\t\t\t\t\tsize=\"md\"\r\n\t\t\t\t\t\trole=\"status\"\r\n\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<p className=\"m-0\">Loading ...</p>\r\n\t\t\t\t</div>)}\r\n\r\n\t\t\t</h1>\r\n\t\t\t<div className={`card-body ${isLoading ? 'opacity-50' : null}`}>\r\n\t\t\t\t<div className={`${paddingSmall ? 'p-sm-0 px-md-3 px-lg-10' : 'p-sm-0 px-md-10 px-lg-20'}`} >\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n\r\nexport const CenterTextCard = ({ children, styles }) => {\r\n\treturn (\r\n\t\t<div className={`d-flex align-items-center justify-content-center`} style={styles} >\r\n\t\t\t<div className=\"text-center\">\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const AlertCard = ({ children, type, message }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={`alert alert-${type}`} role=\"alert\">\r\n\t\t\t\t<h4 className=\"alert-heading\">{type.replace(/^./, type[0].toUpperCase())}</h4>\r\n\t\t\t\t{message}\r\n\t\t\t\t{/* <hr /> */}\r\n\t\t\t\t{/* Whenever you need to, be sure to use margin utilities to keep things nice and tidy. */}\r\n\t\t\t</div>\r\n\t\t\t{children}\r\n\t\t</>\r\n\t);\r\n};\r\n","import { initialQuestions } from \"../component/Form/constants.js\";\r\n\r\n\r\nexport const validateChildren = (children, noOfChildren) => {\r\n\r\n\t// i must have children.lenght that is equal to 1. However, if the noOfChildren is 0, then children.length will be 1\r\n\t// validate if noOfChildren is 0, skip the validation and return true\r\n\tif (noOfChildren === 0) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// validate if data is empty, return false\r\n\tif (!children) {\r\n\t\treturn false;\r\n\t}\r\n\t// validate if data is not an array, return false\r\n\tif (!Array.isArray(children) || children.length !== noOfChildren) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// validate if every object of the array has the required keys\r\n\tlet isValid = true;\r\n\tfor (let i = 0; i < children.length; i++) {\r\n\t\tconst child = children[i];\r\n\t\tif (child.age.length === 0 || child.education_level.length === 0) {\r\n\t\t\tisValid = false;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn isValid;\r\n};\r\n\r\n\r\nexport const processPatientDemoOptions = ({ data, children, noOfChildren }) => {\r\n\treturn processDemoOptions({ data, children, noOfChildren, patient_id: null });\r\n};\r\n\r\nexport const processCaregiverDemoOptions = ({ data, children, noOfChildren, patient_id }) => {\r\n\treturn processDemoOptions({ data, children, noOfChildren, patient_id });\r\n};\r\n\r\nexport const processChildDemoOptions = ({ data, patient_id }) => {\r\n\r\n\t// 1. hardcoded questions\r\n\tlet initialQuestionsKeys = initialQuestions.map((question) => question.name);\r\n\tlet preDefinedQuestions = initialQuestionsKeys.reduce((acc, key) => {\r\n\t\tacc[key] = data[key];\r\n\t\treturn acc;\r\n\t}, {});\r\n\r\n\t// 2. dynamic questions\r\n\tconst dynamicQuestions = {\r\n\t\tdynamicKeys: Object.keys(data).map((key) => Number(key)),\r\n\t\tdynamicData: data\r\n\t};\r\n\treturn {\r\n\t\tdynamicQuestions,\r\n\t\tpreDefinedQuestions,\r\n\t\tpatient_id\r\n\t};\r\n\r\n\r\n};\r\n\r\nexport const processScaleOptions = ({ patient_id, data }) => {\r\n\tconst dataObject = [];\r\n\tfor (const [key, value] of Object.entries(data)) {\r\n\t\tif (!value) continue;\r\n\r\n\t\tconst [patient_id, section_id, question_id] = key?.split('-');\r\n\t\tconst [option_id, is_answer_in_urdu, option_text] = value?.split('-');\r\n\t\tdataObject.push({\r\n\t\t\tpatient_id: parseInt(patient_id),\r\n\t\t\tsection_id: parseInt(section_id),\r\n\t\t\tsection_question_id: parseInt(question_id),\r\n\t\t\tsection_option_id: parseInt(option_id),\r\n\t\t\tanswer_text: option_text,\r\n\t\t\tis_answer_in_urdu: Boolean(Number(is_answer_in_urdu)),\r\n\t\t});\r\n\t}\r\n\r\n\treturn {\r\n\t\tpatient_id,\r\n\t\tdata: dataObject,\r\n\t};\r\n};\r\n\r\nfunction processDemoOptions({ data, children, noOfChildren, patient_id }) {\r\n\t// 1. hardcoded questions\r\n\tlet initialQuestionsKeys = initialQuestions.map((question) => question.name);\r\n\tlet preDefinedQuestions = initialQuestionsKeys.reduce((acc, key) => {\r\n\t\tacc[key] = data[key];\r\n\t\treturn acc;\r\n\t}, {});\r\n\tpreDefinedQuestions.no_of_children = noOfChildren;\r\n\tchildren.forEach((child) => {\r\n\t\tpreDefinedQuestions.children_age = preDefinedQuestions.children_age ? preDefinedQuestions.children_age + ',' + child.age.toString() : child.age.toString();\r\n\t\t// in preDefinedQuestions.children_education_level, replace commas with white spaces to avoid confusion with csv\r\n\t\tpreDefinedQuestions.children_education_level = preDefinedQuestions.children_education_level ? preDefinedQuestions.children_education_level + ',' + child.education_level?.replace(',', ' ').toString() : child.education_level?.replace(',', ' ').toString();\r\n\t});\r\n\r\n\t// 2. dynamic questions\r\n\tconst dynamicQuestions = {\r\n\t\tdynamicKeys: Object.keys(data).map((key) => Number(key)),\r\n\t\tdynamicData: data\r\n\t};\r\n\r\n\tlet returnObj = {\r\n\t\tdynamicQuestions,\r\n\t\tpreDefinedQuestions,\r\n\t};\r\n\r\n\tif (patient_id)\r\n\t\treturn {\r\n\t\t\t...returnObj,\r\n\t\t\tpatient_id\r\n\t\t};\r\n\treturn returnObj;\r\n};","import axiosInstance from '../../../utils/axios.middleware.js';\r\n\r\nclass Question {\r\n\r\n\tstatic getLatestFilledForms = ({ _pageNo, _count }) => {\r\n\t\tlet apiPath = `/api/form/list-latest-filled-forms?_pageNo=${_pageNo}&_count=${_count}`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic getPatientEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-demo-edit-form?id=${id}&type=patient`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updatePatientDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'patient' });\r\n\t};\r\n\r\n\tstatic getCaregiverEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-demo-edit-form?id=${id}&type=caregiver`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateCaregiverDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'caregiver' });\r\n\t};\r\n\r\n\tstatic getChildEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-demo-edit-form?id=${id}&type=child`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateChildDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'child' });\r\n\t};\r\n\r\n}\r\n\r\nexport default Question;","import Form from '../services/form/form.js';\r\nimport actionErrorHandler from '../../helpers/actionErrorHandler.js';\r\n\r\nexport const getLatestFilledForms = (params) => {\r\n\treturn Form.getLatestFilledForms(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getPatientEditForm = (params) => {\r\n\treturn Form.getPatientEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updatePatientDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updatePatientDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getCaregiverEditForm = (params) => {\r\n\treturn Form.getCaregiverEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateCaregiverDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updateCaregiverDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getChildEditForm = (params) => {\r\n\treturn Form.getChildEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateChildDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updateChildDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};"],"names":["location","useLocation","navigate","useNavigate","useState","alert","setAlert","isLoading","setIsLoading","noOfChildren","setNoOfChildren","age","education_level","children","setChildren","answer_text","id","is_date_type","is_nullable","is_number_type","is_radio_type","is_text_type","question_text","question_urdu_text","radio_options","questions","setQuestions","isDesktop","useMediaQuery","useForm","register","handleSubmit","errors","formState","setValue","useEditFormContext","setEditPatientId_c","getEditNavigateTo_c","resetAllEdit_c","EDIT_NAVIGATE_TO","patient_id","state","toast","error","getPatientEditForm","response","status","parseInt","data","patient","demographic","no_of_children","childrenAge","children_age","split","childrenEducationLevel","children_education_level","i","push","initialQuestions","forEach","question","type","name","demo_section_answer","demo_id","demoSectionQuestionsAndAnswers","map","index","message","isNaN","validateChildren","finalOptions","processPatientDemoOptions","updatePatientDemo","caregiver","useTitle","useEffect","window","scrollTo","_getPatientEditForm","title","variant","dismissible","onClose","Heading","className","style","pointerEvents","opacity","onSubmit","formGroup","Group","controlId","Label","urdu_label","length","label","required","Select","value","option","Control","min","onChange","e","Number","target","Array","keys","_","newChildren","toString","PageCard","paddingSmall","as","animation","size","role","CenterTextCard","styles","isArray","isValid","child","processDemoOptions","processCaregiverDemoOptions","processChildDemoOptions","preDefinedQuestions","reduce","acc","key","dynamicQuestions","dynamicKeys","Object","dynamicData","processScaleOptions","dataObject","entries","section_id","question_id","option_id","is_answer_in_urdu","option_text","section_question_id","section_option_id","Boolean","replace","returnObj","Question","getLatestFilledForms","_pageNo","_count","apiPath","axiosInstance","get","post","getCaregiverEditForm","updateCaregiverDemo","getChildEditForm","updateChildDemo","params","Form","then","catch","actionErrorHandler"],"sourceRoot":""}