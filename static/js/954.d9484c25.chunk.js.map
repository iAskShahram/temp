{"version":3,"file":"static/js/954.d9484c25.chunk.js","mappings":"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","sources":["component/Form/Edit/EditChildDemographic.jsx","component/Form/constants.js","component/commonComponents/Cards/HelperCards.jsx","helpers/form.helper.js","store/services/form/form.js","store/actions/form.action.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport { useEditFormContext } from '../../../context/EditFormContextProvider';\r\nimport { useTitle } from '../../../helpers/custom-hooks.js';\r\nimport { processChildDemoOptions } from '../../../helpers/form.helper.js';\r\nimport { getChildEditForm, updateChildDemo } from '../../../store/actions/form.action';\r\nimport { PageCard } from \"../../commonComponents/Cards/HelperCards\";\r\nimport { initialQuestions } from '../constants.js';\r\n\r\nconst EditChildDemographic = () => {\r\n\tconst navigate = useNavigate();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [alert, setAlert] = useState(true);\r\n\tconst [questions, setQuestions] = useState([]);\r\n\tconst { register, handleSubmit, formState: { errors }, setValue } = useForm();\r\n\tconst { getEditPatientId_c, getEditNavigateTo_c } = useEditFormContext();\r\n\tconst patient_id = getEditPatientId_c();\r\n\tconst EDIT_NAVIGATE_TO = getEditNavigateTo_c();\r\n\r\n\tuseTitle('Edit Child Demographics');\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t\tif (!patient_id) {\r\n\t\t\tnavigate(EDIT_NAVIGATE_TO.home);\r\n\t\t} else {\r\n\t\t\t_getChildEditForm();\r\n\t\t}\r\n\t}, []);\r\n\r\n\r\n\tconst _getChildEditForm = async () => {\r\n\t\tif (!patient_id) {\r\n\t\t\ttoast.error('No ID Found');\r\n\t\t\treturn navigate('/');\r\n\t\t}\r\n\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst response = await getChildEditForm({ id: patient_id });\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tinitialQuestions.forEach((question) => {\r\n\t\t\t\t\tif (question.type === 'date') {\r\n\t\t\t\t\t\tsetValue(question.name, response.data.patient.demographic[0][question.name].split('T')[0]);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetValue(question.name, response.data.patient.demographic[0][question.name]);\r\n\t\t\t\t});\r\n\t\t\t\t// // Ends - set state for children and predefined questions\r\n\r\n\t\t\t\tsetValue('patient_id', parseInt(patient_id));\r\n\t\t\t\tsetValue('demo_id', parseInt(response.data.patient.demographic[0].demo_section_answer[0].demo_id));\r\n\r\n\t\t\t\t// Starts - set state for dynamic questions\r\n\t\t\t\tconst demoSectionQuestionsAndAnswers = response.data.patient.demographic[0].demo_section_answer.map((question, index) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: question.question.id, //  this is the demo_section_answer id, rest is related to question.\r\n\t\t\t\t\t\tanswer_text: question.answer_text,\r\n\t\t\t\t\t\tquestion_text: question.question.question_text,\r\n\t\t\t\t\t\tis_nullable: question.question.is_nullable,\r\n\t\t\t\t\t\tquestion_urdu_text: question.question.question_urdu_text || \"\",\r\n\t\t\t\t\t\tradio_options: question.question.radio_options,\r\n\t\t\t\t\t\tis_radio_type: question.question.is_radio_type,\r\n\t\t\t\t\t\tis_date_type: question.question.is_date_type,\r\n\t\t\t\t\t\tis_number_type: question.question.is_number_type,\r\n\t\t\t\t\t\tis_text_type: question.question.is_text_type,\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetQuestions(demoSectionQuestionsAndAnswers);\r\n\t\t\t\tdemoSectionQuestionsAndAnswers.forEach((question) => {\r\n\t\t\t\t\tsetValue(`${question.id}`, question.answer_text);\r\n\t\t\t\t});\r\n\t\t\t\t// Ends - set state for dynamic questions\r\n\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t} else if (response.status >= 400) {\r\n\t\t\t\ttoast.error(response.message.message);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\ttoast.error(err.message);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleData = async (data) => {\r\n\t\tconst patient_id = parseInt(data.patient_id);\r\n\t\tif (!patient_id || isNaN(patient_id)) {\r\n\t\t\ttoast.error('Error processing the form, please try again later');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst demo_id = parseInt(data.demo_id);\r\n\t\tif (!demo_id || isNaN(demo_id)) {\r\n\t\t\ttoast.error('Error processing the form, please try again later');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst finalOptions = processChildDemoOptions({ data, patient_id });\r\n\t\t\tconst response = await updateChildDemo({ demo_id, ...finalOptions });\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tnavigate(EDIT_NAVIGATE_TO.patientScale);\r\n\t\t\t} else if (response.status >= 400) {\r\n\t\t\t\ttoast.error('Some Error Occured!');\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\ttoast.error(err.message);\r\n\t\t}\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<PageCard title={`Edit Child Demographics`} isLoading={isLoading} >\r\n\r\n\r\n\r\n\t\t\t{alert ? <Alert variant=\"info\" dismissible onClose={() => setAlert(false)} >\r\n\t\t\t\t<Alert.Heading>Child Demographics</Alert.Heading>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<p className=\"mb-0\">\r\n\t\t\t\t\tThis is child's data form. Please only fill child's demographics here.\r\n\t\t\t\t</p>\r\n\t\t\t</Alert> : null}\r\n\r\n\r\n\t\t\t<div style={isLoading ? { pointerEvents: `none`, opacity: 0.5 } : {}}>\r\n\t\t\t\t<Form onSubmit={handleSubmit(handleData)}>\r\n\r\n\r\n\t\t\t\t\t{/* These are hardcoded questions. arounf 4-5 that collect general information about the target */}\r\n\t\t\t\t\t{initialQuestions.map((formGroup, index) => (\r\n\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId={formGroup.name} key={index}>\r\n\t\t\t\t\t\t\t<Form.Label className='row d-flex justify-content-between'>\r\n\t\t\t\t\t\t\t\t<div className={`${formGroup.urdu_label.length > 0 ? 'col-md-6' : 'col-12'}`}>\r\n\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\t{`${formGroup.label} : `}{formGroup.required ? <span className='text-danger'>*</span> : null}\r\n\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{formGroup.urdu_label.length > 0 ?\r\n\t\t\t\t\t\t\t\t\t<div className='col-md-6 text-end'>\r\n\t\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\t\t{formGroup.required ? <span className='text-danger'>*</span> : null}{` : ${formGroup.urdu_label}`}\r\n\t\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<div className='px-10'>\r\n\t\t\t\t\t\t\t\t{formGroup.type === 'radio' ?\r\n\t\t\t\t\t\t\t\t\t<Form.Select\r\n\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\tid={`${formGroup.name}-${index}`}\r\n\t\t\t\t\t\t\t\t\t\t{...register(formGroup.name, { required: formGroup.required })}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\" key='0'>Select</option>\r\n\t\t\t\t\t\t\t\t\t\t{formGroup.radio_options.map((option, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={index} value={option}>{option}</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\ttype={formGroup.type}\r\n\t\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\t\t{...register(formGroup.name, { required: formGroup.required })}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{errors[formGroup.name] && <span className=\"text-danger\">This field is required</span>}\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t))}\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t{/* These are rest af the quesrions fetched from the database */}\r\n\t\t\t\t\t{questions.map((formGroup, index) => (\r\n\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId={formGroup.id} key={index} >\r\n\t\t\t\t\t\t\t<Form.Label className='row d-flex justify-content-between'>\r\n\t\t\t\t\t\t\t\t<div className={`${formGroup.question_urdu_text.length > 0 ? 'col-md-6' : 'col-12'}`}>\r\n\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\t{`${formGroup.question_text} : `}{!formGroup.is_nullable ? <span className='text-danger'>*</span> : null}\r\n\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{formGroup.question_urdu_text.length > 0 ?\r\n\t\t\t\t\t\t\t\t\t<div className='col-md-6 text-end'>\r\n\t\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\t\t{!formGroup.is_nullable ? <span className='text-danger'>*</span> : null}{` : ${formGroup.question_urdu_text}`}\r\n\t\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<div className='px-10'>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tformGroup.is_text_type ?\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...register(formGroup.id.toString(), { required: !formGroup.is_nullable })}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\tformGroup.is_number_type ?\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...register(formGroup.id.toString(), { required: !formGroup.is_nullable })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\tformGroup.is_date_type ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...register(formGroup.id.toString(), { required: !formGroup.is_nullable })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\tformGroup.is_radio_type ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// type='radio'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={`${formGroup.id}-${index}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...register(formGroup.id.toString(), { required: !formGroup.is_nullable })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\" key='0'>Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{formGroup.radio_options?.split(',').map((option, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option key={`default-${formGroup.id}-${i}`} value={option}>{option}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{errors[formGroup.id.toString()] ? <span className=\"text-danger\">This field is required</span> : null}\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t))}\r\n\r\n\r\n\t\t\t\t\t<Form.Group className=\"mb-3\">\r\n\t\t\t\t\t\t<Button className=\"mb-3\" variant=\"secondary\" type=\"button\" onClick={() => navigate(EDIT_NAVIGATE_TO.caregiver)}>\r\n\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button className=\"mb-3 float-end\" variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t</PageCard >\r\n\t);\r\n};\r\n\r\nexport default EditChildDemographic;","\r\n// Question Response \r\n\r\n// {\r\n// \tid: 43;\r\n// \tisActive: true;\r\n\r\n// \tis_caregiver: true;\r\n// \tis_child: false;\r\n// \tis_patient: true;\r\n\r\n// \tquestion_text: \"Contact No\";\r\n\r\n// \tis_text_type: false;\r\n// \tis_number_type: true;\r\n// \tis_date_type: false;\r\n// \tis_radio_type: false;\r\n// \tradio_options: \"\";\r\n\r\n// \tis_nullable: false;\r\n\r\n// \tcreated_at: \"2023-03-19T14:38:49.000Z\";\r\n// \tupdated_at: \"2023-03-19T14:38:49.895Z\";\r\n// }\r\n\r\nexport const initialQuestions = [\r\n\t{\r\n\t\tlabel: 'Name',\r\n\t\turdu_label: 'نام',\r\n\t\ttype: 'text',\r\n\t\tname: 'name',\r\n\t\trequired: false\r\n\t},\r\n\t{\r\n\t\tlabel: 'Gender',\r\n\t\turdu_label: 'صنف',\r\n\t\ttype: 'radio',\r\n\t\tname: 'gender',\r\n\t\trequired: true,\r\n\t\tradio_options: ['male', 'female']\r\n\t},\r\n\t{\r\n\t\tlabel: 'Age',\r\n\t\turdu_label: 'عمر',\r\n\t\ttype: 'number',\r\n\t\tname: 'age',\r\n\t\trequired: true,\r\n\t},\r\n\t{\r\n\t\tlabel: 'Date of Birth',\r\n\t\turdu_label: 'عمر',\r\n\t\ttype: 'date',\r\n\t\tname: 'dob',\r\n\t\trequired: true,\r\n\t},\r\n];","import Spinner from \"react-bootstrap/Spinner\";\r\n\r\nexport const PageCard = ({ children, title, isLoading, paddingSmall }) => {\r\n\treturn (\r\n\t\t<div className=\"my-8 card \">\r\n\t\t\t<h1 className=\"card-header\">\r\n\t\t\t\t<div className=\"card-title m-0\">\r\n\t\t\t\t\t<h3 className=\"fw-bolder m-0\">{title}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!isLoading ? null : (<div className=\"card-subtitle card-title m-0\">\r\n\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\tas=\"span\"\r\n\t\t\t\t\t\tanimation=\"grow\"\r\n\t\t\t\t\t\tsize=\"md\"\r\n\t\t\t\t\t\trole=\"status\"\r\n\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<p className=\"m-0\">Loading ...</p>\r\n\t\t\t\t</div>)}\r\n\r\n\t\t\t</h1>\r\n\t\t\t<div className={`card-body ${isLoading ? 'opacity-50' : null}`}>\r\n\t\t\t\t<div className={`${paddingSmall ? 'p-sm-0 px-md-3 px-lg-10' : 'p-sm-0 px-md-10 px-lg-20'}`} >\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n\r\nexport const CenterTextCard = ({ children, styles }) => {\r\n\treturn (\r\n\t\t<div className={`d-flex align-items-center justify-content-center`} style={styles} >\r\n\t\t\t<div className=\"text-center\">\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const AlertCard = ({ children, type, message }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={`alert alert-${type}`} role=\"alert\">\r\n\t\t\t\t<h4 className=\"alert-heading\">{type.replace(/^./, type[0].toUpperCase())}</h4>\r\n\t\t\t\t{message}\r\n\t\t\t\t{/* <hr /> */}\r\n\t\t\t\t{/* Whenever you need to, be sure to use margin utilities to keep things nice and tidy. */}\r\n\t\t\t</div>\r\n\t\t\t{children}\r\n\t\t</>\r\n\t);\r\n};\r\n","import { initialQuestions } from \"../component/Form/constants.js\";\r\n\r\n\r\nexport const validateChildren = (children, noOfChildren) => {\r\n\r\n\t// i must have children.lenght that is equal to 1. However, if the noOfChildren is 0, then children.length will be 1\r\n\t// validate if noOfChildren is 0, skip the validation and return true\r\n\tif (noOfChildren === 0) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// validate if data is empty, return false\r\n\tif (!children) {\r\n\t\treturn false;\r\n\t}\r\n\t// validate if data is not an array, return false\r\n\tif (!Array.isArray(children) || children.length !== noOfChildren) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// validate if every object of the array has the required keys\r\n\tlet isValid = true;\r\n\tfor (let i = 0; i < children.length; i++) {\r\n\t\tconst child = children[i];\r\n\t\tif (child.age.length === 0 || child.education_level.length === 0) {\r\n\t\t\tisValid = false;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn isValid;\r\n};\r\n\r\n\r\nexport const processPatientDemoOptions = ({ data, children, noOfChildren }) => {\r\n\treturn processDemoOptions({ data, children, noOfChildren, patient_id: null });\r\n};\r\n\r\nexport const processCaregiverDemoOptions = ({ data, children, noOfChildren, patient_id }) => {\r\n\treturn processDemoOptions({ data, children, noOfChildren, patient_id });\r\n};\r\n\r\nexport const processChildDemoOptions = ({ data, patient_id }) => {\r\n\r\n\t// 1. hardcoded questions\r\n\tlet initialQuestionsKeys = initialQuestions.map((question) => question.name);\r\n\tlet preDefinedQuestions = initialQuestionsKeys.reduce((acc, key) => {\r\n\t\tacc[key] = data[key];\r\n\t\treturn acc;\r\n\t}, {});\r\n\r\n\t// 2. dynamic questions\r\n\tconst dynamicQuestions = {\r\n\t\tdynamicKeys: Object.keys(data).map((key) => Number(key)),\r\n\t\tdynamicData: data\r\n\t};\r\n\treturn {\r\n\t\tdynamicQuestions,\r\n\t\tpreDefinedQuestions,\r\n\t\tpatient_id\r\n\t};\r\n\r\n\r\n};\r\n\r\nexport const processScaleOptions = ({ patient_id, data }) => {\r\n\tconst dataObject = [];\r\n\tfor (const [key, value] of Object.entries(data)) {\r\n\t\tif (!value) continue;\r\n\r\n\t\tconst [patient_id, section_id, question_id] = key?.split('-');\r\n\t\tconst [option_id, is_answer_in_urdu, option_text] = value?.split('-');\r\n\t\tdataObject.push({\r\n\t\t\tpatient_id: parseInt(patient_id),\r\n\t\t\tsection_id: parseInt(section_id),\r\n\t\t\tsection_question_id: parseInt(question_id),\r\n\t\t\tsection_option_id: parseInt(option_id),\r\n\t\t\tanswer_text: option_text,\r\n\t\t\tis_answer_in_urdu: Boolean(Number(is_answer_in_urdu)),\r\n\t\t});\r\n\t}\r\n\r\n\treturn {\r\n\t\tpatient_id,\r\n\t\tdata: dataObject,\r\n\t};\r\n};\r\n\r\nfunction processDemoOptions({ data, children, noOfChildren, patient_id }) {\r\n\t// 1. hardcoded questions\r\n\tlet initialQuestionsKeys = initialQuestions.map((question) => question.name);\r\n\tlet preDefinedQuestions = initialQuestionsKeys.reduce((acc, key) => {\r\n\t\tacc[key] = data[key];\r\n\t\treturn acc;\r\n\t}, {});\r\n\tpreDefinedQuestions.no_of_children = noOfChildren;\r\n\tchildren.forEach((child) => {\r\n\t\tpreDefinedQuestions.children_age = preDefinedQuestions.children_age ? preDefinedQuestions.children_age + ',' + child.age.toString() : child.age.toString();\r\n\t\t// in preDefinedQuestions.children_education_level, replace commas with white spaces to avoid confusion with csv\r\n\t\tpreDefinedQuestions.children_education_level = preDefinedQuestions.children_education_level ? preDefinedQuestions.children_education_level + ',' + child.education_level?.replace(',', ' ').toString() : child.education_level?.replace(',', ' ').toString();\r\n\t});\r\n\r\n\t// 2. dynamic questions\r\n\tconst dynamicQuestions = {\r\n\t\tdynamicKeys: Object.keys(data).map((key) => Number(key)),\r\n\t\tdynamicData: data\r\n\t};\r\n\r\n\tlet returnObj = {\r\n\t\tdynamicQuestions,\r\n\t\tpreDefinedQuestions,\r\n\t};\r\n\r\n\tif (patient_id)\r\n\t\treturn {\r\n\t\t\t...returnObj,\r\n\t\t\tpatient_id\r\n\t\t};\r\n\treturn returnObj;\r\n};","import axiosInstance from '../../../utils/axios.middleware.js';\r\n\r\nclass Question {\r\n\r\n\tstatic getLatestFilledForms = ({ _pageNo, _count }) => {\r\n\t\tlet apiPath = `/api/form/list-latest-filled-forms?_pageNo=${_pageNo}&_count=${_count}`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic getPatientEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-demo?id=${id}&type=patient`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updatePatientDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'patient' });\r\n\t};\r\n\r\n\tstatic getCaregiverEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-demo?id=${id}&type=caregiver`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateCaregiverDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'caregiver' });\r\n\t};\r\n\r\n\tstatic getChildEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-demo?id=${id}&type=child`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateChildDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'child' });\r\n\t};\r\n\r\n\tstatic getEditPatientScales = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-scale?id=${id}&type=patient`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updatePatientScales = ({ patient_id, scales }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-scale`;\r\n\t\treturn axiosInstance.post(apiPath, { patient_id, scales, type: 'patient' });\r\n\t};\r\n\r\n\tstatic getEditCaregiverScales = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-scale?id=${id}&type=caregiver`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateCaregiverScales = ({ patient_id, scales }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-scale`;\r\n\t\treturn axiosInstance.post(apiPath, { patient_id, scales, type: 'caregiver' });\r\n\t};\r\n\r\n\tstatic getEditChildScales = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-scale?id=${id}&type=child`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateChildScales = ({ patient_id, scales }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-scale`;\r\n\t\treturn axiosInstance.post(apiPath, { patient_id, scales, type: 'child' });\r\n\t};\r\n\r\n}\r\n\r\nexport default Question;","import Form from '../services/form/form.js';\r\nimport actionErrorHandler from '../../helpers/actionErrorHandler.js';\r\n\r\nexport const getLatestFilledForms = (params) => {\r\n\treturn Form.getLatestFilledForms(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getPatientEditForm = (params) => {\r\n\treturn Form.getPatientEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updatePatientDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updatePatientDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getCaregiverEditForm = (params) => {\r\n\treturn Form.getCaregiverEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateCaregiverDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updateCaregiverDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getChildEditForm = (params) => {\r\n\treturn Form.getChildEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateChildDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updateChildDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getEditPatientScales = ({ id }) => {\r\n\treturn Form.getEditPatientScales({ id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updatePatientScales = ({ patient_id, scales }) => {\r\n\treturn Form.updatePatientScales({ patient_id, scales })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getEditCaregiverScales = ({ id }) => {\r\n\treturn Form.getEditCaregiverScales({ id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\tconsole.log(e);\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateCaregiverScales = ({ patient_id, scales }) => {\r\n\treturn Form.updateCaregiverScales({ patient_id, scales })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getEditChildScales = ({ id }) => {\r\n\treturn Form.getEditChildScales({ id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t}).catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateChildScales = ({ patient_id, scales }) => {\r\n\treturn Form.updateChildScales({ patient_id, scales })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\"\r\n\t\t\t};\r\n\t\t}).catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};"],"names":["navigate","useNavigate","useState","isLoading","setIsLoading","alert","setAlert","questions","setQuestions","useForm","register","handleSubmit","errors","formState","setValue","useEditFormContext","getEditPatientId_c","getEditNavigateTo_c","patient_id","EDIT_NAVIGATE_TO","useTitle","useEffect","window","scrollTo","_getChildEditForm","home","toast","error","getChildEditForm","id","response","status","initialQuestions","forEach","question","type","name","data","patient","demographic","split","parseInt","demo_section_answer","demo_id","demoSectionQuestionsAndAnswers","map","index","answer_text","question_text","is_nullable","question_urdu_text","radio_options","is_radio_type","is_date_type","is_number_type","is_text_type","message","handleData","isNaN","finalOptions","processChildDemoOptions","updateChildDemo","patientScale","title","variant","dismissible","onClose","Heading","className","style","pointerEvents","opacity","onSubmit","formGroup","Group","controlId","Label","urdu_label","length","label","required","Select","value","option","Control","min","toString","i","onClick","caregiver","PageCard","children","paddingSmall","as","animation","size","role","CenterTextCard","styles","validateChildren","noOfChildren","Array","isArray","isValid","child","age","education_level","processPatientDemoOptions","processDemoOptions","processCaregiverDemoOptions","preDefinedQuestions","reduce","acc","key","dynamicQuestions","dynamicKeys","Object","keys","Number","dynamicData","processScaleOptions","dataObject","entries","section_id","question_id","option_id","is_answer_in_urdu","option_text","push","section_question_id","section_option_id","Boolean","no_of_children","children_age","children_education_level","replace","returnObj","Question","getLatestFilledForms","_pageNo","_count","apiPath","axiosInstance","get","getPatientEditForm","updatePatientDemo","post","getCaregiverEditForm","updateCaregiverDemo","getEditPatientScales","updatePatientScales","scales","getEditCaregiverScales","updateCaregiverScales","getEditChildScales","updateChildScales","params","Form","then","catch","e","actionErrorHandler","console","log"],"sourceRoot":""}