{"version":3,"file":"static/js/385.03c744ed.chunk.js","mappings":"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","sources":["component/Home/LatestFilledForms.jsx","component/Home/Home.jsx","component/commonComponents/Cards/HelperCards.jsx","store/services/form/form.js","store/actions/form.action.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport DataTableExtensions from \"react-data-table-component-extensions\";\r\nimport \"react-data-table-component-extensions/dist/index.css\";\r\nimport { BsPencilSquare, BsTrashFill } from \"react-icons/bs\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { deleteForm, getLatestFilledForms } from \"../../store/actions/form.action\";\r\nimport SpinnerComponent from \"../commonComponents/Loader/Loader.jsx\";\r\n\r\n\r\nconst LatestFilledForms = () => {\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\tname: \"Patient ID\",\r\n\t\t\tselector: row => row.id,\r\n\t\t\tcellExport: row => row.id,\r\n\t\t\tcell: row => row.id || '',\r\n\t\t\twrap: true,\r\n\t\t\tcenter: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Name\",\r\n\t\t\tselector: row => row.name,\r\n\t\t\tcellExport: row => row.name,\r\n\t\t\tcell: row => row.name || '',\r\n\t\t\twrap: true,\r\n\t\t\tcenter: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"CNIC\",\r\n\t\t\tselector: row => row.demographic[0]?.demo_section_answer?.[0]?.answer_text,\r\n\t\t\tcellExport: row => row.demographic[0]?.demo_section_answer?.[0]?.answer_text,\r\n\t\t\tcell: row => row.demographic[0]?.demo_section_answer?.[0]?.answer_text || '',\r\n\t\t\twrap: true,\r\n\t\t\tcenter: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"DoB\",\r\n\t\t\tselector: row => row.demographic[0]?.dob,\r\n\t\t\tcellExport: row => row.demographic[0]?.dob,\r\n\t\t\tcell: row => row.demographic[0]?.dob?.split('T')[0] || '',\r\n\t\t\twrap: true,\r\n\t\t\tcenter: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Created By\",\r\n\t\t\tselector: row => row.created_by?.name,\r\n\t\t\tcellExport: row => row.created_by?.name,\r\n\t\t\tcell: row => row.created_by?.name || '',\r\n\t\t\twrap: true,\r\n\t\t\tcenter: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Created At\",\r\n\t\t\tselector: row => row.created_at,\r\n\t\t\tcellExport: row => row.created_at,\r\n\t\t\tcell: row => (row.created_at?.split('T')[0] || '') + ' ' + (' ', row.created_at?.split('T')[1]?.split('.')[0] || ''),\r\n\t\t\twrap: true,\r\n\t\t\tcenter: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Action\",\r\n\t\t\tsortable: false,\r\n\t\t\tcell: (row) => (\r\n\t\t\t\t<div className=\"btn-group\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => _editForm(row.id)}\r\n\t\t\t\t\t\tclassName=\"btn btn-primary btn-sm\"\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tname=\"options\"\r\n\t\t\t\t\t\tid=\"option1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BsPencilSquare />\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => _deleteForm(row.id)}\r\n\t\t\t\t\t\tclassName=\"btn btn-danger btn-sm\"\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tname=\"options\"\r\n\t\t\t\t\t\tid=\"option2\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BsTrashFill />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t];\r\n\r\n\tconst [isLoading, setisLoading] = useState(false);\r\n\tconst [data, setData] = useState([]);\r\n\tconst [page, setPage] = useState(1);\r\n\tconst [rowsPerPage, setRowsPerPage] = useState(10);\r\n\tconst [totalUsers, setTotalUsers] = useState(0);\r\n\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst paginationComponentOptions = {\r\n\t\trowsPerPageText: \"Rows per page:\",\r\n\t\trangeSeparatorText: \"of\",\r\n\t\tselectAllRowsItem: true,\r\n\t\tselectAllRowsItemText: \"Show All\",\r\n\t};\r\n\r\n\tconst tableData = {\r\n\t\tcolumns,\r\n\t\tdata,\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t_getLatestFilledForms();\r\n\t}, [page, rowsPerPage]);\r\n\r\n\tconst _getLatestFilledForms = async () => {\r\n\t\tsetisLoading(true);\r\n\t\ttry {\r\n\t\t\tconst response = await getLatestFilledForms({\r\n\t\t\t\t_pageNo: page,\r\n\t\t\t\t_count: rowsPerPage\r\n\t\t\t});\r\n\t\t\tsetData(response.data?.patients || []);\r\n\t\t\tsetTotalUsers(response.data?.total || 0);\r\n\t\t\tsetisLoading(false);\r\n\t\t} catch (error) {\r\n\t\t\tsetisLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tfunction _editForm(id) {\r\n\t\tif (!id) return toast.error('No ID Found');\r\n\t\treturn navigate(\"/edit-form-demo-patient\", { state: { id } });\r\n\t}\r\n\r\n\tasync function _deleteForm(id) {\r\n\t\tid = parseInt(id);\r\n\t\tif (!id || isNaN(id)) return toast.error('No ID Found');\r\n\t\tif (!window.confirm('Are you sure you want to delete this form?')) return;\r\n\t\ttry {\r\n\t\t\tconst response = await deleteForm({ id });\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\ttoast.success('Form Deleted Successfully');\r\n\t\t\t\tconsole.log({ response });\r\n\t\t\t\t_getLatestFilledForms();\r\n\t\t\t} else if (response.status >= 400) {\r\n\t\t\t\ttoast.error('Something went wrong');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\ttoast.error('Something went wrong');\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3> Latest Filled Forms </h3>\r\n\t\t\t<div className=\"card-body border-top p-9\">\r\n\t\t\t\t<DataTableExtensions {...tableData}>\r\n\t\t\t\t\t<DataTable\r\n\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\tnoHeader\r\n\t\t\t\t\t\thighlightOnHover\r\n\t\t\t\t\t\tdefaultSortField=\"id\"\r\n\t\t\t\t\t\tdefaultSortAsc={true}\r\n\t\t\t\t\t\texportHeaders={true}\r\n\r\n\t\t\t\t\t\tprogressComponent={<SpinnerComponent text={` Loading Forms ...`} vh100={false} />}\r\n\t\t\t\t\t\tprogressPending={isLoading}\r\n\t\t\t\t\t\ttitle=\"Latest Filled Forms\"\r\n\t\t\t\t\t\tresponsive={true}\r\n\r\n\t\t\t\t\t\tpagination\r\n\t\t\t\t\t\tpaginationServer\r\n\t\t\t\t\t\tpaginationDefaultPage={page}\r\n\t\t\t\t\t\tpaginationPerPage={rowsPerPage}\r\n\t\t\t\t\t\tpaginationTotalRows={totalUsers}\r\n\t\t\t\t\t\tpaginationComponentOptions={paginationComponentOptions}\r\n\r\n\t\t\t\t\t\tonChangePage={(page) => setPage(Number(page))}\r\n\t\t\t\t\t\tonChangeRowsPerPage={(row) => setRowsPerPage(Number(row))}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DataTableExtensions>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default LatestFilledForms;","import Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTitle } from '../../helpers/custom-hooks.js';\r\nimport { CenterTextCard, PageCard } from '../commonComponents/Cards/HelperCards.jsx';\r\nimport LatestFilledForms from './LatestFilledForms.jsx';\r\nimport { useUserProfile } from '../../context/UserContextProvider.js';\r\n\r\nfunction Home() {\r\n\tconst { getUserProfile_c } = useUserProfile();\r\n\tconst user = getUserProfile_c();\r\n\tuseTitle('Index');\r\n\r\n\treturn (\r\n\t\t<PageCard title=\"Home Page\" >\r\n\t\t\t<CenterTextCard>\r\n\t\t\t\t<Link to=\"/form\">\r\n\t\t\t\t\t<Button variant=\"primary\" >\r\n\t\t\t\t\t\tContinue to Form\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</CenterTextCard>\r\n\t\t\t<CenterTextCard styles={{ marginTop: '32px' }}>\r\n\t\t\t\t<LatestFilledForms />\r\n\t\t\t</CenterTextCard>\r\n\t\t</PageCard>\r\n\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n","import Spinner from \"react-bootstrap/Spinner\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const PageCard = ({ children, title, isLoading, paddingSmall, resetCookieAndLocalStorage }) => {\r\n\tconst navigate = useNavigate();\r\n\tconst clearFormCache = () => {\r\n\t\tconst shouldClear = window.confirm('Are you sure you want to clear cache?');\r\n\t\tif (shouldClear) {\r\n\t\t\tresetCookieAndLocalStorage();\r\n\t\t\tnavigate(\"/\");\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"my-8 card \">\r\n\t\t\t<h1 className=\"card-header\">\r\n\t\t\t\t<div className=\"card-title m-0\">\r\n\t\t\t\t\t<h3 className=\"fw-bolder m-0\">{title}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!isLoading ? null : (<div className=\"card-subtitle card-title m-0\">\r\n\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\tas=\"span\"\r\n\t\t\t\t\t\tanimation=\"grow\"\r\n\t\t\t\t\t\tsize=\"md\"\r\n\t\t\t\t\t\trole=\"status\"\r\n\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<p className=\"m-0\">Loading ...</p>\r\n\t\t\t\t</div>)}\r\n\t\t\t\t{resetCookieAndLocalStorage &&\r\n\t\t\t\t\t<div className=\"card-subtitle card-title m-0\">\r\n\t\t\t\t\t\t<Button variant=\"outline-danger\" className=\"m-0\" onClick={clearFormCache} >Clear Form Cache</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</h1>\r\n\t\t\t<div className={`card-body ${isLoading ? 'opacity-50' : null}`} style={isLoading ? { pointerEvents: \"none\" } : {}}>\r\n\t\t\t\t<div className={`${paddingSmall ? 'p-sm-0 px-md-3 px-lg-10' : 'p-sm-0 px-md-10 px-lg-20'}`} >\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n\r\nexport const CenterTextCard = ({ children, styles }) => {\r\n\treturn (\r\n\t\t<div className={`d-flex align-items-center justify-content-center`} style={styles} >\r\n\t\t\t<div className=\"text-center\">\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const AlertCard = ({ children, type, message }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={`alert alert-${type}`} role=\"alert\">\r\n\t\t\t\t<h4 className=\"alert-heading\">{type.replace(/^./, type[0].toUpperCase())}</h4>\r\n\t\t\t\t{message}\r\n\t\t\t\t{/* <hr /> */}\r\n\t\t\t\t{/* Whenever you need to, be sure to use margin utilities to keep things nice and tidy. */}\r\n\t\t\t</div>\r\n\t\t\t{children}\r\n\t\t</>\r\n\t);\r\n};\r\n","import axiosInstance from '../../../utils/axios.middleware.js';\r\n\r\nclass Question {\r\n\r\n\tstatic getLatestFilledForms = ({ _pageNo, _count }) => {\r\n\t\tlet apiPath = `/api/form/list-latest-filled-forms?_pageNo=${_pageNo}&_count=${_count}`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic getPatientEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-demo?id=${id}&type=patient`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updatePatientDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'patient' });\r\n\t};\r\n\r\n\tstatic getCaregiverEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-demo?id=${id}&type=caregiver`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateCaregiverDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'caregiver' });\r\n\t};\r\n\r\n\tstatic getChildEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-demo?id=${id}&type=child`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateChildDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'child' });\r\n\t};\r\n\r\n\tstatic getEditPatientScales = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-scale?id=${id}&type=patient`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updatePatientScales = ({ patient_id, scales }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-scale`;\r\n\t\treturn axiosInstance.post(apiPath, { patient_id, scales, type: 'patient' });\r\n\t};\r\n\r\n\tstatic getEditCaregiverScales = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-scale?id=${id}&type=caregiver`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateCaregiverScales = ({ patient_id, scales }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-scale`;\r\n\t\treturn axiosInstance.post(apiPath, { patient_id, scales, type: 'caregiver' });\r\n\t};\r\n\r\n\tstatic getEditChildScales = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-scale?id=${id}&type=child`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateChildScales = ({ patient_id, scales }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-scale`;\r\n\t\treturn axiosInstance.post(apiPath, { patient_id, scales, type: 'child' });\r\n\t};\r\n\r\n\tstatic deleteForm = async ({ id }) => {\r\n\t\tlet apiPath = `/api/form/delete-form?id=${id}`;\r\n\t\treturn axiosInstance.delete(apiPath);\r\n\t};\r\n\r\n}\r\n\r\nexport default Question;","import Form from '../services/form/form.js';\r\nimport actionErrorHandler from '../../helpers/actionErrorHandler.js';\r\n\r\nexport const getLatestFilledForms = (params) => {\r\n\treturn Form.getLatestFilledForms(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getPatientEditForm = (params) => {\r\n\treturn Form.getPatientEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updatePatientDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updatePatientDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getCaregiverEditForm = (params) => {\r\n\treturn Form.getCaregiverEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateCaregiverDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updateCaregiverDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getChildEditForm = (params) => {\r\n\treturn Form.getChildEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateChildDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updateChildDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getEditPatientScales = ({ id }) => {\r\n\treturn Form.getEditPatientScales({ id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updatePatientScales = ({ patient_id, scales }) => {\r\n\treturn Form.updatePatientScales({ patient_id, scales })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getEditCaregiverScales = ({ id }) => {\r\n\treturn Form.getEditCaregiverScales({ id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\tconsole.log(e);\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateCaregiverScales = ({ patient_id, scales }) => {\r\n\treturn Form.updateCaregiverScales({ patient_id, scales })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getEditChildScales = ({ id }) => {\r\n\treturn Form.getEditChildScales({ id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t}).catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateChildScales = ({ patient_id, scales }) => {\r\n\treturn Form.updateChildScales({ patient_id, scales })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\"\r\n\t\t\t};\r\n\t\t}).catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const deleteForm = ({ id }) => {\r\n\treturn Form.deleteForm({ id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\"\r\n\t\t\t};\r\n\t\t}).catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};"],"names":["columns","name","selector","row","id","cellExport","cell","wrap","center","demographic","demo_section_answer","answer_text","dob","split","created_by","created_at","sortable","className","onClick","navigate","state","toast","error","type","_deleteForm","useState","isLoading","setisLoading","data","setData","page","setPage","rowsPerPage","setRowsPerPage","totalUsers","setTotalUsers","useNavigate","tableData","useEffect","_getLatestFilledForms","getLatestFilledForms","_pageNo","_count","response","patients","total","parseInt","isNaN","window","confirm","deleteForm","status","success","console","log","noHeader","highlightOnHover","defaultSortField","defaultSortAsc","exportHeaders","progressComponent","text","vh100","progressPending","title","responsive","pagination","paginationServer","paginationDefaultPage","paginationPerPage","paginationTotalRows","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","selectAllRowsItem","selectAllRowsItemText","onChangePage","Number","onChangeRowsPerPage","getUserProfile_c","useUserProfile","useTitle","to","Button","variant","styles","marginTop","PageCard","children","paddingSmall","resetCookieAndLocalStorage","as","animation","size","role","style","pointerEvents","CenterTextCard","Question","apiPath","axiosInstance","get","getPatientEditForm","updatePatientDemo","dynamicQuestions","preDefinedQuestions","demo_id","patient_id","post","getCaregiverEditForm","updateCaregiverDemo","getChildEditForm","updateChildDemo","getEditPatientScales","updatePatientScales","scales","getEditCaregiverScales","updateCaregiverScales","getEditChildScales","updateChildScales","delete","params","Form","then","message","catch","e","actionErrorHandler"],"sourceRoot":""}