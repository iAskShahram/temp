{"version":3,"file":"static/js/73.9f9beb05.chunk.js","mappings":"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","sources":["component/City/ListCity.jsx","store/services/city/city.js","store/actions/city.action.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport DataTableExtensions from \"react-data-table-component-extensions\";\r\nimport \"react-data-table-component-extensions/dist/index.css\";\r\nimport { BsTrashFill } from \"react-icons/bs\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { useTitle } from '../../helpers/custom-hooks.js';\r\nimport { deleteCity, listCities } from \"../../store/actions/city.action.js\";\r\nimport Loader from \"../commonComponents/Loader/Loader\";\r\n\r\nconst ListCity = () => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [pageChange, setPageChange] = useState(1);\r\n\tconst [rowsPerPageChange, setRowsPerPageChange] = useState(10);\r\n\tconst [data, setData] = useState([]);\r\n\tconst [totalCities, setTotalCities] = useState(0);\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\tname: \"City Name\",\r\n\t\t\tcenter: true,\r\n\t\t\tselector: row => row.name,\r\n\t\t\tcellExport: row => row.name,\r\n\t\t\twrap: true,\r\n\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Created At\",\r\n\t\t\tcenter: true,\r\n\t\t\tselector: row => row.created_at,\r\n\t\t\tcellExport: row => row.created_at,\r\n\t\t\twrap: true,\r\n\t\t\tcell: (row) => row.created_at?.split(\"T\")[0]\r\n\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Created By\",\r\n\t\t\tcenter: true,\r\n\t\t\tselector: row => row.created_by?.name,\r\n\t\t\tcellExport: row => row.created_by?.name,\r\n\t\t\twrap: true,\r\n\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Actions\",\r\n\t\t\tcenter: true,\r\n\t\t\tselector: row => row.id,\r\n\t\t\twrap: true,\r\n\t\t\tcell: (row) => (\r\n\t\t\t\t<div className=\"btn-group\">\r\n\t\t\t\t\t{/* <button\r\n\t\t\t\t\t\tonClick={() => _editCity(row.id)}\r\n\t\t\t\t\t\tclassName=\"btn btn-primary btn-sm\"\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tname=\"options\"\r\n\t\t\t\t\t\tid=\"option1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BsPencilSquare />\r\n\t\t\t\t\t</button> */}\r\n\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => _deleteCity(row.id)}\r\n\t\t\t\t\t\tclassName=\"btn btn-danger btn-sm\"\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tname=\"options\"\r\n\t\t\t\t\t\tid=\"option2\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<BsTrashFill />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t];\r\n\r\n\tconst paginationComponentOptions = {\r\n\t\trowsPerPageText: \"Rows per page:\",\r\n\t\trangeSeparatorText: \"of\",\r\n\t\tselectAllRowsItem: true,\r\n\t\tselectAllRowsItemText: \"Show All\",\r\n\t};\r\n\r\n\tconst tableData = {\r\n\t\tcolumns,\r\n\t\tdata,\r\n\t};\r\n\r\n\tuseTitle(\"List Cities\");\r\n\r\n\tuseEffect(() => {\r\n\t\t_getCities();\r\n\t}, [pageChange, rowsPerPageChange]);\r\n\r\n\r\n\tasync function _getCities() {\r\n\t\tsetIsLoading(true);\r\n\t\tlet response = await listCities({\r\n\t\t\t_pageNo: pageChange,\r\n\t\t\t_count: rowsPerPageChange\r\n\t\t});\r\n\t\tsetIsLoading(false);\r\n\t\tif (response.status === 200) {\r\n\t\t\tsetData(response.data.cities);\r\n\t\t\tsetTotalCities(response.data.total);\r\n\t\t} else if (response.status >= 400) {\r\n\t\t\ttoast.warn(\"failed to get cities\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync function _deleteCity(id) {\r\n\t\tconst confirmDelete = window.confirm(\"Are you sure you want to delete this city?\");\r\n\t\tif (!confirmDelete) return;\r\n\r\n\t\tif (!parseInt(id)) return toast.warn(\"City id is required\");\r\n\r\n\t\tlet response = await deleteCity({ id });\r\n\t\tif (response.status === 200) {\r\n\t\t\ttoast.success(\"Deleted Sucessfully\");\r\n\t\t\t_getCities();\r\n\t\t} else if (response.status >= 400) {\r\n\t\t\ttoast.warn(response.message.message);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"my-8 card\">\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"card-header border-0 cursor-pointer\"\r\n\t\t\t\trole=\"button\"\r\n\t\t\t\tdata-bs-toggle=\"collapse\"\r\n\t\t\t\tdata-bs-target=\"#kt_account_profile_details\"\r\n\t\t\t\taria-expanded=\"true\"\r\n\t\t\t\taria-controls=\"kt_account_profile_details\"\r\n\t\t\t>\r\n\t\t\t\t<div className=\"card-title m-0\">\r\n\t\t\t\t\t<h3 className=\"fw-bolder m-0\">Cities' List</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card-body border-top p-9\">\r\n\t\t\t\t<DataTableExtensions {...tableData}>\r\n\t\t\t\t\t<DataTable\r\n\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\tnoHeader\r\n\t\t\t\t\t\thighlightOnHover\r\n\t\t\t\t\t\tdefaultSortField=\"id\"\r\n\t\t\t\t\t\tdefaultSortAsc={true}\r\n\t\t\t\t\t\texportHeaders={true}\r\n\t\t\t\t\t\tprogressPending={isLoading}\r\n\t\t\t\t\t\tprogressComponent={<Loader text=\"Loading Cities\" />}\r\n\r\n\t\t\t\t\t\tpagination\r\n\t\t\t\t\t\tpaginationServer\r\n\t\t\t\t\t\tpaginationDefaultPage={pageChange}\r\n\t\t\t\t\t\tpaginationPerPage={rowsPerPageChange}\r\n\t\t\t\t\t\tpaginationTotalRows={totalCities}\r\n\t\t\t\t\t\tpaginationComponentOptions={paginationComponentOptions}\r\n\r\n\t\t\t\t\t\tonChangePage={(page) => setPageChange(Number(page))}\r\n\t\t\t\t\t\tonChangeRowsPerPage={(row) => setRowsPerPageChange(Number(row))}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DataTableExtensions>\r\n\t\t\t</div>\r\n\t\t\t<ToastContainer />\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default ListCity;\r\n","import axiosInstance from '../../../utils/axios.middleware.js';\r\n\r\nclass City {\r\n\r\n\tstatic listCities = (params) => {\r\n\r\n\t\tlet apiPath = `/api/city/list-cities?_pageNo=${params?._pageNo}&_count=${params?._count}`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\r\n\t};\r\n\r\n\r\n\tstatic createCity = (form) => {\r\n\r\n\t\tlet apiPath = 'api/city';\r\n\t\treturn axiosInstance.post(apiPath, {\r\n\t\t\t...form\r\n\t\t});\r\n\r\n\t};\r\n\r\n\tstatic deleteCity = ({ id }) => {\r\n\r\n\t\tlet apiPath = `api/city/${id}`;\r\n\t\treturn axiosInstance.delete(apiPath);\r\n\r\n\t};\r\n\r\n}\r\nexport default City;","import City from \"../services/city/city.js\";\r\nimport actionErrorHandler from '../../helpers/actionErrorHandler.js';\r\n\r\nexport const listCities = (params) => {\r\n\treturn City.listCities(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const createCity = (form) => {\r\n\r\n\treturn City.createCity(form).then(response => {\r\n\t\treturn { status: response.status, data: response.data, message: \"Request Success\" };\r\n\t}).catch(e => {\r\n\t\treturn actionErrorHandler(e);\r\n\t});\r\n\r\n};\r\n\r\nexport const deleteCity = ({ id }) => {\r\n\r\n\treturn City.deleteCity({ id }).then(response => {\r\n\t\treturn { status: response.status, data: response.data, message: \"Request Success\" };\r\n\t}).catch(e => {\r\n\t\treturn actionErrorHandler(e);\r\n\t});\r\n\r\n};\r\n"],"names":["useState","isLoading","setIsLoading","pageChange","setPageChange","rowsPerPageChange","setRowsPerPageChange","data","setData","totalCities","setTotalCities","columns","name","center","selector","row","cellExport","wrap","created_at","cell","split","created_by","id","className","onClick","_deleteCity","type","tableData","_getCities","listCities","_pageNo","_count","response","status","cities","total","toast","warn","window","confirm","parseInt","deleteCity","success","message","useTitle","useEffect","role","noHeader","highlightOnHover","defaultSortField","defaultSortAsc","exportHeaders","progressPending","progressComponent","text","pagination","paginationServer","paginationDefaultPage","paginationPerPage","paginationTotalRows","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","selectAllRowsItem","selectAllRowsItemText","onChangePage","page","Number","onChangeRowsPerPage","City","params","apiPath","axiosInstance","get","createCity","form","post","delete","then","catch","e","actionErrorHandler"],"sourceRoot":""}