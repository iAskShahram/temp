{"version":3,"file":"static/js/998.7df27fc0.chunk.js","mappings":"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","sources":["component/Form/Edit/EditCaregiverDemographic.jsx","component/Form/constants.js","component/commonComponents/Cards/HelperCards.jsx","helpers/form.helper.js","store/services/form/form.js","store/actions/form.action.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport { useEditFormContext } from '../../../context/EditFormContextProvider';\r\nimport { useMediaQuery, useTitle } from '../../../helpers/custom-hooks.js';\r\nimport { processCaregiverDemoOptions, validateChildren } from '../../../helpers/form.helper.js';\r\nimport { getCaregiverEditForm, updateCaregiverDemo } from '../../../store/actions/form.action';\r\nimport { PageCard } from \"../../commonComponents/Cards/HelperCards\";\r\nimport { initialQuestions } from '../constants.js';\r\n\r\nconst EditCaregiverDemographic = () => {\r\n\tconst navigate = useNavigate();\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [alert, setAlert] = useState(true);\r\n\tconst [questions, setQuestions] = useState([]);\r\n\tconst [noOfChildren, setNoOfChildren] = useState(0);\r\n\tconst [children, setChildren] = useState([\r\n\t\t{\r\n\t\t\tage: '',\r\n\t\t\teducation_level: ''\r\n\t\t}\r\n\t]);\r\n\tconst isDesktop = useMediaQuery('(min-width: 992px)');\r\n\tconst { register, handleSubmit, formState: { errors }, setValue } = useForm();\r\n\tconst { getEditPatientId_c, getEditNavigateTo_c } = useEditFormContext();\r\n\tconst patient_id = getEditPatientId_c();\r\n\tconst EDIT_NAVIGATE_TO = getEditNavigateTo_c();\r\n\r\n\tuseTitle('Edit Caregiver Demographics');\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t\tif (!patient_id) {\r\n\t\t\tnavigate(EDIT_NAVIGATE_TO.home);\r\n\t\t} else {\r\n\t\t\t_getCaregiverEditForm();\r\n\t\t}\r\n\t}, []);\r\n\r\n\r\n\tconst _getCaregiverEditForm = async () => {\r\n\t\tif (!patient_id) {\r\n\t\t\ttoast.error('No ID Found');\r\n\t\t\treturn navigate('/');\r\n\t\t}\r\n\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst response = await getCaregiverEditForm({ id: patient_id });\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\t// Starts - set state for children and predefined questions\r\n\t\t\t\tsetNoOfChildren(parseInt(response.data.patient.demographic[0].children.no_of_children));\r\n\t\t\t\tconst children = [];\r\n\t\t\t\tconst childrenAge = response.data.patient.demographic[0].children.children_age.split(',');\r\n\t\t\t\tconst childrenEducationLevel = response.data.patient.demographic[0].children.children_education_level.split(',');\r\n\t\t\t\tfor (let i = 0; i < parseInt(response.data.patient.demographic[0].children.no_of_children); i++) {\r\n\t\t\t\t\tchildren.push({\r\n\t\t\t\t\t\tage: parseInt(childrenAge[i]),\r\n\t\t\t\t\t\teducation_level: childrenEducationLevel[i]\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tsetChildren(children);\r\n\r\n\t\t\t\tsetValue('no_of_children', parseInt(response.data.patient.demographic[0].children.no_of_children));\r\n\t\t\t\tsetValue('children_age', parseInt(response.data.patient.demographic[0].children.children_age));\r\n\t\t\t\tinitialQuestions.forEach((question) => {\r\n\t\t\t\t\tif (question.type === 'date') {\r\n\t\t\t\t\t\tsetValue(question.name, response.data.patient.demographic[0][question.name].split('T')[0]);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetValue(question.name, response.data.patient.demographic[0][question.name]);\r\n\t\t\t\t});\r\n\t\t\t\t// Ends - set state for children and predefined questions\r\n\r\n\t\t\t\t// set value for demo_id\r\n\t\t\t\tsetValue('patient_id', parseInt(patient_id));\r\n\t\t\t\tsetValue('demo_id', parseInt(response.data.patient.demographic[0].demo_section_answer[0].demo_id));\r\n\r\n\t\t\t\t// Starts - set state for dynamic questions\r\n\t\t\t\tconst demoSectionQuestionsAndAnswers = response.data.patient.demographic[0].demo_section_answer.map((question, index) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: question.question.id, //  this is the demo_section_answer id, rest is related to question.\r\n\t\t\t\t\t\tanswer_text: question.answer_text,\r\n\t\t\t\t\t\tquestion_text: question.question.question_text,\r\n\t\t\t\t\t\tis_nullable: question.question.is_nullable,\r\n\t\t\t\t\t\tquestion_urdu_text: question.question.question_urdu_text || \"\",\r\n\t\t\t\t\t\tradio_options: question.question.radio_options,\r\n\t\t\t\t\t\tis_radio_type: question.question.is_radio_type,\r\n\t\t\t\t\t\tis_date_type: question.question.is_date_type,\r\n\t\t\t\t\t\tis_number_type: question.question.is_number_type,\r\n\t\t\t\t\t\tis_text_type: question.question.is_text_type,\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetQuestions(demoSectionQuestionsAndAnswers);\r\n\t\t\t\tdemoSectionQuestionsAndAnswers.forEach((question) => {\r\n\t\t\t\t\tsetValue(`${question.id}`, question.answer_text);\r\n\t\t\t\t});\r\n\t\t\t\t// Ends - set state for dynamic questions\r\n\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t} else if (response.status >= 400) {\r\n\t\t\t\ttoast.error(response.message.message);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\ttoast.error(err.message);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleData = async (data) => {\r\n\t\tconst patient_id = parseInt(data.patient_id);\r\n\t\tif (!patient_id || isNaN(patient_id)) {\r\n\t\t\ttoast.error('Error processing the form, please try again later');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!validateChildren(children, noOfChildren)) {\r\n\t\t\ttoast.error('Please fill all the fields of children');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst demo_id = parseInt(data.demo_id);\r\n\t\tif (!demo_id || isNaN(demo_id)) {\r\n\t\t\ttoast.error('Error processing the form, please try again later');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst finalOptions = processCaregiverDemoOptions({ data, children, noOfChildren, patient_id });\r\n\t\t\tconst response = await updateCaregiverDemo({ demo_id, patient_id, ...finalOptions });\r\n\t\t\tif (response.status === 200) {\r\n\t\t\t\tnavigate(EDIT_NAVIGATE_TO.child);\r\n\t\t\t} else if (response.status >= 400) {\r\n\t\t\t\ttoast.error('Some Error Occured!');\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\ttoast.error(err.message);\r\n\t\t}\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<PageCard title=\"Edit Caregiver Demographics\" isLoading={isLoading} >\r\n\r\n\r\n\r\n\t\t\t{alert ? <Alert variant=\"info\" dismissible onClose={() => setAlert(false)} >\r\n\t\t\t\t<Alert.Heading>Caregiver Demographics</Alert.Heading>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<p className=\"mb-0\">\r\n\t\t\t\t\tThis is caregiver's data form. Please only fill caregiver's demographics here.\r\n\t\t\t\t</p>\r\n\t\t\t</Alert> : null}\r\n\r\n\r\n\t\t\t<div style={isLoading ? { pointerEvents: `none`, opacity: 0.5 } : {}}>\r\n\t\t\t\t<Form onSubmit={handleSubmit(handleData)}>\r\n\r\n\r\n\t\t\t\t\t{/* These are hardcoded questions. arounf 4-5 that collect general information about the target */}\r\n\t\t\t\t\t{initialQuestions.map((formGroup, index) => (\r\n\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId={formGroup.name} key={index}>\r\n\t\t\t\t\t\t\t<Form.Label className='row d-flex justify-content-between'>\r\n\t\t\t\t\t\t\t\t<div className={`${formGroup.urdu_label.length > 0 ? 'col-md-6' : 'col-12'}`}>\r\n\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\t{`${formGroup.label} : `}{formGroup.required ? <span className='text-danger'>*</span> : null}\r\n\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{formGroup.urdu_label.length > 0 ?\r\n\t\t\t\t\t\t\t\t\t<div className='col-md-6 text-end'>\r\n\t\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\t\t{formGroup.required ? <span className='text-danger'>*</span> : null}{` : ${formGroup.urdu_label}`}\r\n\t\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<div className='px-10'>\r\n\t\t\t\t\t\t\t\t{formGroup.type === 'radio' ?\r\n\t\t\t\t\t\t\t\t\t<Form.Select\r\n\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\tid={`${formGroup.name}-${index}`}\r\n\t\t\t\t\t\t\t\t\t\t{...register(formGroup.name, { required: formGroup.required })}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"\" key='0'>Select</option>\r\n\t\t\t\t\t\t\t\t\t\t{formGroup.radio_options.map((option, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={index} value={option}>{option}</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\ttype={formGroup.type}\r\n\t\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\t\t{...register(formGroup.name, { required: formGroup.required })}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{errors[formGroup.name] && <span className=\"text-danger\">This field is required</span>}\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t))}\r\n\r\n\r\n\r\n\t\t\t\t\t{/* custom feilds for children data  - Start */}\r\n\t\t\t\t\t{/* first question: number of children */}\r\n\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"no_of_children\">\r\n\t\t\t\t\t\t<Form.Label><b>{`No of children : `}<span className='text-danger'>*</span></b></Form.Label>\r\n\t\t\t\t\t\t<div className='px-10'>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\tvalue={noOfChildren}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetNoOfChildren(Number(e.target.value));\r\n\t\t\t\t\t\t\t\t\tsetChildren([...Array(Number(e.target.value)).keys()].map((_, i) => ({\r\n\t\t\t\t\t\t\t\t\t\tage: '',\r\n\t\t\t\t\t\t\t\t\t\teducation_level: ''\r\n\t\t\t\t\t\t\t\t\t})));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t{/* if number of children are greater than 0 then ask ages of every children and their education level  */}\r\n\t\t\t\t\t{noOfChildren > 0 ? children.map((child, index) => (\r\n\t\t\t\t\t\t<div key={index} className='row'>\r\n\r\n\t\t\t\t\t\t\t<div className='col-4'>\r\n\t\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"age\">\r\n\t\t\t\t\t\t\t\t\t<Form.Label><b>{`Age of child ${index + 1}: `}</b></Form.Label>\r\n\t\t\t\t\t\t\t\t\t<div className={`${isDesktop ? 'px-10' : 'px-2'}`}>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst newChildren = [...children];\r\n\t\t\t\t\t\t\t\t\t\t\t\tnewChildren[index].age = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetChildren(newChildren);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={children[index].age}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='col-8'>\r\n\t\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"education_level\">\r\n\t\t\t\t\t\t\t\t\t<Form.Label><b>{`Education level of child ${index + 1} : `}</b></Form.Label>\r\n\t\t\t\t\t\t\t\t\t<div className={`${isDesktop ? 'px-10' : 'px-2'}`}>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst newChildren = [...children];\r\n\t\t\t\t\t\t\t\t\t\t\t\tnewChildren[index].education_level = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetChildren(newChildren);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={children[index].education_level}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)) : null}\r\n\t\t\t\t\t{/* custom feilds for children data  - End */}\r\n\r\n\r\n\r\n\t\t\t\t\t{/* These are rest af the quesrions fetched from the database */}\r\n\t\t\t\t\t{questions.map((formGroup, index) => (\r\n\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId={formGroup.id} key={index} >\r\n\t\t\t\t\t\t\t<Form.Label className='row d-flex justify-content-between'>\r\n\t\t\t\t\t\t\t\t<div className={`${formGroup.question_urdu_text.length > 0 ? 'col-md-6' : 'col-12'}`}>\r\n\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\t{`${formGroup.question_text} : `}{!formGroup.is_nullable ? <span className='text-danger'>*</span> : null}\r\n\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{formGroup.question_urdu_text.length > 0 ?\r\n\t\t\t\t\t\t\t\t\t<div className='col-md-6 text-end'>\r\n\t\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\t\t{!formGroup.is_nullable ? <span className='text-danger'>*</span> : null}{` : ${formGroup.question_urdu_text}`}\r\n\t\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Form.Label>\r\n\t\t\t\t\t\t\t<div className='px-10'>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tformGroup.is_text_type ?\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...register(formGroup.id.toString(), { required: !formGroup.is_nullable })}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\tformGroup.is_number_type ?\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...register(formGroup.id.toString(), { required: !formGroup.is_nullable })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\tformGroup.is_date_type ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...register(formGroup.id.toString(), { required: !formGroup.is_nullable })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\tformGroup.is_radio_type ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// type='radio'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={`${formGroup.id}-${index}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...register(formGroup.id.toString(), { required: !formGroup.is_nullable })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\" key='0'>Select</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{formGroup.radio_options?.split(',').map((option, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option key={`default-${formGroup.id}-${i}`} value={option}>{option}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{errors[formGroup.id.toString()] ? <span className=\"text-danger\">This field is required</span> : null}\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t))}\r\n\r\n\r\n\t\t\t\t\t<Form.Group className=\"mb-3\">\r\n\t\t\t\t\t\t<Button className=\"mb-3\" variant=\"secondary\" type=\"button\" onClick={() => navigate(EDIT_NAVIGATE_TO.patient, { state: { id: patient_id } })}>\r\n\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button className=\"mb-3 float-end\" variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t</PageCard >\r\n\t);\r\n};\r\n\r\nexport default EditCaregiverDemographic;","\r\n// Question Response \r\n\r\n// {\r\n// \tid: 43;\r\n// \tisActive: true;\r\n\r\n// \tis_caregiver: true;\r\n// \tis_child: false;\r\n// \tis_patient: true;\r\n\r\n// \tquestion_text: \"Contact No\";\r\n\r\n// \tis_text_type: false;\r\n// \tis_number_type: true;\r\n// \tis_date_type: false;\r\n// \tis_radio_type: false;\r\n// \tradio_options: \"\";\r\n\r\n// \tis_nullable: false;\r\n\r\n// \tcreated_at: \"2023-03-19T14:38:49.000Z\";\r\n// \tupdated_at: \"2023-03-19T14:38:49.895Z\";\r\n// }\r\n\r\nexport const initialQuestions = [\r\n\t{\r\n\t\tlabel: 'Name',\r\n\t\turdu_label: 'نام',\r\n\t\ttype: 'text',\r\n\t\tname: 'name',\r\n\t\trequired: false\r\n\t},\r\n\t{\r\n\t\tlabel: 'Gender',\r\n\t\turdu_label: 'صنف',\r\n\t\ttype: 'radio',\r\n\t\tname: 'gender',\r\n\t\trequired: true,\r\n\t\tradio_options: ['male', 'female']\r\n\t},\r\n\t{\r\n\t\tlabel: 'Age',\r\n\t\turdu_label: 'عمر',\r\n\t\ttype: 'number',\r\n\t\tname: 'age',\r\n\t\trequired: true,\r\n\t},\r\n\t{\r\n\t\tlabel: 'Date of Birth',\r\n\t\turdu_label: 'عمر',\r\n\t\ttype: 'date',\r\n\t\tname: 'dob',\r\n\t\trequired: true,\r\n\t},\r\n];","import Spinner from \"react-bootstrap/Spinner\";\r\n\r\nexport const PageCard = ({ children, title, isLoading, paddingSmall }) => {\r\n\treturn (\r\n\t\t<div className=\"my-8 card \">\r\n\t\t\t<h1 className=\"card-header\">\r\n\t\t\t\t<div className=\"card-title m-0\">\r\n\t\t\t\t\t<h3 className=\"fw-bolder m-0\">{title}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t{!isLoading ? null : (<div className=\"card-subtitle card-title m-0\">\r\n\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\tas=\"span\"\r\n\t\t\t\t\t\tanimation=\"grow\"\r\n\t\t\t\t\t\tsize=\"md\"\r\n\t\t\t\t\t\trole=\"status\"\r\n\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<p className=\"m-0\">Loading ...</p>\r\n\t\t\t\t</div>)}\r\n\r\n\t\t\t</h1>\r\n\t\t\t<div className={`card-body ${isLoading ? 'opacity-50' : null}`}>\r\n\t\t\t\t<div className={`${paddingSmall ? 'p-sm-0 px-md-3 px-lg-10' : 'p-sm-0 px-md-10 px-lg-20'}`} >\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\n\r\nexport const CenterTextCard = ({ children, styles }) => {\r\n\treturn (\r\n\t\t<div className={`d-flex align-items-center justify-content-center`} style={styles} >\r\n\t\t\t<div className=\"text-center\">\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const AlertCard = ({ children, type, message }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={`alert alert-${type}`} role=\"alert\">\r\n\t\t\t\t<h4 className=\"alert-heading\">{type.replace(/^./, type[0].toUpperCase())}</h4>\r\n\t\t\t\t{message}\r\n\t\t\t\t{/* <hr /> */}\r\n\t\t\t\t{/* Whenever you need to, be sure to use margin utilities to keep things nice and tidy. */}\r\n\t\t\t</div>\r\n\t\t\t{children}\r\n\t\t</>\r\n\t);\r\n};\r\n","import { initialQuestions } from \"../component/Form/constants.js\";\r\n\r\n\r\nexport const validateChildren = (children, noOfChildren) => {\r\n\r\n\t// i must have children.lenght that is equal to 1. However, if the noOfChildren is 0, then children.length will be 1\r\n\t// validate if noOfChildren is 0, skip the validation and return true\r\n\tif (noOfChildren === 0) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// validate if data is empty, return false\r\n\tif (!children) {\r\n\t\treturn false;\r\n\t}\r\n\t// validate if data is not an array, return false\r\n\tif (!Array.isArray(children) || children.length !== noOfChildren) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// validate if every object of the array has the required keys\r\n\tlet isValid = true;\r\n\tfor (let i = 0; i < children.length; i++) {\r\n\t\tconst child = children[i];\r\n\t\tif (child.age.length === 0 || child.education_level.length === 0) {\r\n\t\t\tisValid = false;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn isValid;\r\n};\r\n\r\n\r\nexport const processPatientDemoOptions = ({ data, children, noOfChildren }) => {\r\n\treturn processDemoOptions({ data, children, noOfChildren, patient_id: null });\r\n};\r\n\r\nexport const processCaregiverDemoOptions = ({ data, children, noOfChildren, patient_id }) => {\r\n\treturn processDemoOptions({ data, children, noOfChildren, patient_id });\r\n};\r\n\r\nexport const processChildDemoOptions = ({ data, patient_id }) => {\r\n\r\n\t// 1. hardcoded questions\r\n\tlet initialQuestionsKeys = initialQuestions.map((question) => question.name);\r\n\tlet preDefinedQuestions = initialQuestionsKeys.reduce((acc, key) => {\r\n\t\tacc[key] = data[key];\r\n\t\treturn acc;\r\n\t}, {});\r\n\r\n\t// 2. dynamic questions\r\n\tconst dynamicQuestions = {\r\n\t\tdynamicKeys: Object.keys(data).map((key) => Number(key)),\r\n\t\tdynamicData: data\r\n\t};\r\n\treturn {\r\n\t\tdynamicQuestions,\r\n\t\tpreDefinedQuestions,\r\n\t\tpatient_id\r\n\t};\r\n\r\n\r\n};\r\n\r\nexport const processScaleOptions = ({ patient_id, data }) => {\r\n\tconst dataObject = [];\r\n\tfor (const [key, value] of Object.entries(data)) {\r\n\t\tif (!value) continue;\r\n\r\n\t\tconst [patient_id, section_id, question_id] = key?.split('-');\r\n\t\tconst [option_id, is_answer_in_urdu, option_text] = value?.split('-');\r\n\t\tdataObject.push({\r\n\t\t\tpatient_id: parseInt(patient_id),\r\n\t\t\tsection_id: parseInt(section_id),\r\n\t\t\tsection_question_id: parseInt(question_id),\r\n\t\t\tsection_option_id: parseInt(option_id),\r\n\t\t\tanswer_text: option_text,\r\n\t\t\tis_answer_in_urdu: Boolean(Number(is_answer_in_urdu)),\r\n\t\t});\r\n\t}\r\n\r\n\treturn {\r\n\t\tpatient_id,\r\n\t\tdata: dataObject,\r\n\t};\r\n};\r\n\r\nfunction processDemoOptions({ data, children, noOfChildren, patient_id }) {\r\n\t// 1. hardcoded questions\r\n\tlet initialQuestionsKeys = initialQuestions.map((question) => question.name);\r\n\tlet preDefinedQuestions = initialQuestionsKeys.reduce((acc, key) => {\r\n\t\tacc[key] = data[key];\r\n\t\treturn acc;\r\n\t}, {});\r\n\tpreDefinedQuestions.no_of_children = noOfChildren;\r\n\tchildren.forEach((child) => {\r\n\t\tpreDefinedQuestions.children_age = preDefinedQuestions.children_age ? preDefinedQuestions.children_age + ',' + child.age.toString() : child.age.toString();\r\n\t\t// in preDefinedQuestions.children_education_level, replace commas with white spaces to avoid confusion with csv\r\n\t\tpreDefinedQuestions.children_education_level = preDefinedQuestions.children_education_level ? preDefinedQuestions.children_education_level + ',' + child.education_level?.replace(',', ' ').toString() : child.education_level?.replace(',', ' ').toString();\r\n\t});\r\n\r\n\t// 2. dynamic questions\r\n\tconst dynamicQuestions = {\r\n\t\tdynamicKeys: Object.keys(data).map((key) => Number(key)),\r\n\t\tdynamicData: data\r\n\t};\r\n\r\n\tlet returnObj = {\r\n\t\tdynamicQuestions,\r\n\t\tpreDefinedQuestions,\r\n\t};\r\n\r\n\tif (patient_id)\r\n\t\treturn {\r\n\t\t\t...returnObj,\r\n\t\t\tpatient_id\r\n\t\t};\r\n\treturn returnObj;\r\n};","import axiosInstance from '../../../utils/axios.middleware.js';\r\n\r\nclass Question {\r\n\r\n\tstatic getLatestFilledForms = ({ _pageNo, _count }) => {\r\n\t\tlet apiPath = `/api/form/list-latest-filled-forms?_pageNo=${_pageNo}&_count=${_count}`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic getPatientEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-demo?id=${id}&type=patient`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updatePatientDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'patient' });\r\n\t};\r\n\r\n\tstatic getCaregiverEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-demo?id=${id}&type=caregiver`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateCaregiverDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'caregiver' });\r\n\t};\r\n\r\n\tstatic getChildEditForm = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-demo?id=${id}&type=child`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateChildDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-demo`;\r\n\t\treturn axiosInstance.post(apiPath, { dynamicQuestions, preDefinedQuestions, demo_id, patient_id, type: 'child' });\r\n\t};\r\n\r\n\tstatic getEditPatientScales = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-scale?id=${id}&type=patient`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updatePatientScales = ({ patient_id, scales }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-scale`;\r\n\t\treturn axiosInstance.post(apiPath, { patient_id, scales, type: 'patient' });\r\n\t};\r\n\r\n\tstatic getEditCaregiverScales = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-scale?id=${id}&type=caregiver`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateCaregiverScales = ({ patient_id, scales }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-scale`;\r\n\t\treturn axiosInstance.post(apiPath, { patient_id, scales, type: 'caregiver' });\r\n\t};\r\n\r\n\tstatic getEditChildScales = ({ id }) => {\r\n\t\tlet apiPath = `/api/form/get-edit-scale?id=${id}&type=child`;\r\n\t\treturn axiosInstance.get(apiPath);\r\n\t};\r\n\r\n\tstatic updateChildScales = ({ patient_id, scales }) => {\r\n\t\tlet apiPath = `/api/form/update-edit-scale`;\r\n\t\treturn axiosInstance.post(apiPath, { patient_id, scales, type: 'child' });\r\n\t};\r\n\r\n}\r\n\r\nexport default Question;","import Form from '../services/form/form.js';\r\nimport actionErrorHandler from '../../helpers/actionErrorHandler.js';\r\n\r\nexport const getLatestFilledForms = (params) => {\r\n\treturn Form.getLatestFilledForms(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getPatientEditForm = (params) => {\r\n\treturn Form.getPatientEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updatePatientDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updatePatientDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getCaregiverEditForm = (params) => {\r\n\treturn Form.getCaregiverEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateCaregiverDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updateCaregiverDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getChildEditForm = (params) => {\r\n\treturn Form.getChildEditForm(params)\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateChildDemo = ({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id }) => {\r\n\treturn Form.updateChildDemo({ dynamicQuestions, preDefinedQuestions, demo_id, patient_id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getEditPatientScales = ({ id }) => {\r\n\treturn Form.getEditPatientScales({ id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updatePatientScales = ({ patient_id, scales }) => {\r\n\treturn Form.updatePatientScales({ patient_id, scales })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getEditCaregiverScales = ({ id }) => {\r\n\treturn Form.getEditCaregiverScales({ id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\tconsole.log(e);\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateCaregiverScales = ({ patient_id, scales }) => {\r\n\treturn Form.updateCaregiverScales({ patient_id, scales })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const getEditChildScales = ({ id }) => {\r\n\treturn Form.getEditChildScales({ id })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\",\r\n\t\t\t};\r\n\t\t}).catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};\r\n\r\nexport const updateChildScales = ({ patient_id, scales }) => {\r\n\treturn Form.updateChildScales({ patient_id, scales })\r\n\t\t.then((response) => {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: response.status,\r\n\t\t\t\tdata: response.data,\r\n\t\t\t\tmessage: \"success\"\r\n\t\t\t};\r\n\t\t}).catch((e) => {\r\n\t\t\treturn actionErrorHandler(e);\r\n\t\t});\r\n};"],"names":["navigate","useNavigate","useState","isLoading","setIsLoading","alert","setAlert","questions","setQuestions","noOfChildren","setNoOfChildren","age","education_level","children","setChildren","isDesktop","useMediaQuery","useForm","register","handleSubmit","errors","formState","setValue","useEditFormContext","getEditPatientId_c","getEditNavigateTo_c","patient_id","EDIT_NAVIGATE_TO","useTitle","useEffect","window","scrollTo","_getCaregiverEditForm","home","toast","error","getCaregiverEditForm","id","response","status","parseInt","data","patient","demographic","no_of_children","childrenAge","children_age","split","childrenEducationLevel","children_education_level","i","push","initialQuestions","forEach","question","type","name","demo_section_answer","demo_id","demoSectionQuestionsAndAnswers","map","index","answer_text","question_text","is_nullable","question_urdu_text","radio_options","is_radio_type","is_date_type","is_number_type","is_text_type","message","handleData","isNaN","validateChildren","finalOptions","processCaregiverDemoOptions","updateCaregiverDemo","child","title","variant","dismissible","onClose","Heading","className","style","pointerEvents","opacity","onSubmit","formGroup","Group","controlId","Label","urdu_label","length","label","required","Select","value","option","Control","min","onChange","e","Number","target","Array","keys","_","newChildren","toString","onClick","state","PageCard","paddingSmall","as","animation","size","role","CenterTextCard","styles","isArray","isValid","processPatientDemoOptions","processDemoOptions","processChildDemoOptions","preDefinedQuestions","reduce","acc","key","dynamicQuestions","dynamicKeys","Object","dynamicData","processScaleOptions","dataObject","entries","section_id","question_id","option_id","is_answer_in_urdu","option_text","section_question_id","section_option_id","Boolean","replace","returnObj","Question","getLatestFilledForms","_pageNo","_count","apiPath","axiosInstance","get","getPatientEditForm","updatePatientDemo","post","getChildEditForm","updateChildDemo","getEditPatientScales","updatePatientScales","scales","getEditCaregiverScales","updateCaregiverScales","getEditChildScales","updateChildScales","params","Form","then","catch","actionErrorHandler","console","log"],"sourceRoot":""}